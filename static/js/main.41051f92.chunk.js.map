{"version":3,"sources":["components/CountNumI.js","components/CountNumH.js","components/UseContext.js","components/ReducerDemo.js","components/toRedux/Color.js","components/toRedux/ShowArea.js","components/toRedux/Buttons.js","components/toRedux/SimulationRedux.js","components/asyncRequest/GetData.js","views/HookPage.js","components/drags/Gif.js","components/calculator/Button.js","views/DragPic.js","components/calculator/BtnPanel.js","components/calculator/Display.js","utils/operateC.js","views/Calculator.js","components/windowSize/UseCallback.js","utils/history.js","App.js","index.js"],"names":["CountNumI","props","countNumEvent","count","state","setState","console","log","this","onClick","Component","CountNumH","useState","setCount","useEffect","document","title","to","path","exact","component","Index","List","CountContext","createContext","StatusContext","UseContext","status","setStatus","Provider","value","Counter","Consumer","CountChild","useContext","ReducerDemo","useReducer","action","color","dispatch","ColorContext","reducer","type","Color","size","children","ShowArea","style","Buttons","SimulationRedux","GetData","data","setData","loading","query","setQuery","url","setUrl","isError","isCancelled","getDataFunc","then","res","catch","err","onChange","event","target","map","val","index","key","name","a","axios","get","aJson","HookPage","Gif","gif","src","alt","Button","sortableContainer","className","sortableElement","classNames","orange","wide","join","trim","clickHandler","BtnPanel","handleClick","buttonName","Display","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","div","Error","Set","history","createBrowserHistory","App","process","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.41051f92.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass CountNumI extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { count: 0 }\r\n    }\r\n    countNumEvent = () => {\r\n        let count = this.state.count\r\n        this.setState({\r\n            count: count + 1\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        console.log(`ComponentDidMount=>You clicked ${this.state.count} times`)\r\n    }\r\n    componentDidUpdate() {\r\n        console.log(`componentDidUpdate=>You clicked ${this.state.count} times`)\r\n    }\r\n    render() {\r\n        return (<div>\r\n            <p>You clicked {this.state.count} times</p>\r\n            <button onClick={this.countNumEvent}>Click me</button>\r\n            <div>\r\n                <h3>用class 方式为计数器添加生命周期</h3>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default CountNumI;","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n// let isshow =true\r\nconst CountNumH = () => {\r\n  const [count, setCount] = useState(0);\r\n  //react hooks 必须按顺序调用 即不可以使用if else\r\n  // if(isshow){\r\n  // const [num,setNum] = useState(12);\r\n  // }\r\n  const [num, setNum] = useState(12);\r\n  useEffect(() => {\r\n    console.log(`useEffect, you clicked ${count} times`)\r\n    document.title = `You clicked ${count} times`\r\n    return () => { console.log(`==========================`) }\r\n  }, [count])\r\n  return (<div>\r\n    <h2>useState</h2>\r\n    <p>You clicked {count} times</p>\r\n    <button onClick={() => { setCount(count + 1) }}>Hooks Increase</button>\r\n    <button onClick={() => { if (count > 0) { setCount(count - 1) } }}>Hooks Decrease</button>\r\n\r\n    <div>\r\n      <h2>Router Page useEffect Part</h2>\r\n      <Router>\r\n        <ul>\r\n          <li><Link to=\"/\">Link</Link></li>\r\n          <li><Link to=\"/list\">List</Link></li>\r\n        </ul>\r\n        <Route path=\"/\" exact component={Index}></Route>\r\n        <Route path=\"/list\" component={List}></Route>\r\n      </Router>\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nexport default CountNumH;\r\n\r\nfunction Index() {\r\n  useEffect(() => {\r\n    console.log(`welcome to index page`);\r\n    return console.log(`leave from index page`);\r\n  }, [12])\r\n  return <h2>this is a index page</h2>\r\n}\r\nfunction List() {\r\n  useEffect(() => {\r\n    console.log(`welcome to list page`);\r\n    function getData() {\r\n      console.log('componentWillUnMount ')\r\n    }\r\n    return () => {\r\n      /**一下两行代码都会在组件被销毁的componentWillUnMount钩子中调用**/\r\n      console.log('取消订阅')\r\n      getData()\r\n    };\r\n    // useEffect 第二个参数为空 即只在componentDidMount生命周期中调用\r\n    //若[]中输入一状态变量 如输入count 变量 则只有count 变化 该useEffect中的函数才会被调用\r\n  }, [])\r\n  return <div>\r\n    <h2>this is a list page</h2>\r\n    <ul>\r\n      <li>1</li>\r\n      <li>2</li>\r\n      <li>3</li>\r\n    </ul>\r\n  </div>\r\n}\r\n","import React, { useState, createContext, useContext } from 'react';\r\n\r\nconst CountContext = createContext();\r\nconst StatusContext = createContext();\r\nconst UseContext = () => {\r\n    const [count, setCount] = useState(0);\r\n    const [status, setStatus] = useState(true);\r\n    return (<div>\r\n        <p>You clicked {count} times</p>\r\n        <button onClick={() => { setCount(count + 1) }}>Hooks Increase</button>\r\n        <button onClick={() => { setStatus(!status) }}>{status ? 'isShow' : 'isHide'}</button>\r\n        <CountContext.Provider value={count}>\r\n            <StatusContext.Provider value={status}>\r\n                <Counter></Counter>\r\n            </StatusContext.Provider>\r\n        </CountContext.Provider>\r\n    </div>);\r\n}\r\n\r\nexport default UseContext;\r\n\r\nfunction Counter() {\r\n    // const count = useContext(CountContext);\r\n    // 第一层子组件  获取传递值得方法一 这个获取多个值时页面会比较乱\r\n    return <div>\r\n        <CountContext.Consumer>\r\n            {count => <i>{count}</i>}\r\n        </CountContext.Consumer>\r\n        <CountChild></CountChild>\r\n        <StatusContext.Consumer>\r\n            {status => <h2>{status ? 'isShow' : 'isHide'}第一层子组件传递多变量</h2>}\r\n        </StatusContext.Consumer>\r\n    </div>\r\n}\r\n\r\nfunction CountChild() {\r\n    //第二层子组件  获取传递值得方法二 这个获取多个值时页面会比较清晰 代码量较少\r\n    const status = useContext(StatusContext)\r\n    const count = useContext(CountContext);\r\n    return <div>\r\n        <h2>{count}深层子组件{status ? 'isShow' : 'isHide'}</h2>\r\n\r\n    </div>\r\n}","import React, { useReducer } from 'react';\r\n\r\nconst ReducerDemo = () => {\r\n    const [{ count, color }, dispatch] = useReducer((state, action) => {\r\n        switch (action) {\r\n            case 'add':\r\n                return { ...state, count: state.count + 1 }\r\n            case 'sub':\r\n                return { ...state, count: state.count - 1 }\r\n            case 'change':\r\n                return { ...state, color: 'blue' }\r\n            default:\r\n                return state\r\n        }\r\n    }, { count: 0, color: 'red' })\r\n    return (<div>\r\n        <h2>现在的分数是{count}</h2>\r\n        <h2>现在的颜色是{color}</h2>\r\n        <button onClick={() => dispatch('add')}>Increment</button>\r\n        <button onClick={() => dispatch('sub')}>Decrement</button>\r\n        <button onClick={() => dispatch('change')}>Change color</button>\r\n\r\n    </div>);\r\n}\r\n\r\nexport default ReducerDemo;","import React,{createContext,useReducer} from 'react';\r\nimport { conditionalExpression } from '@babel/types';\r\n\r\nexport const ColorContext = createContext({});\r\nexport const UPDATE_COLOR='UPDATE_COLOR';\r\n\r\nconst reducer=(state,action)=>{\r\n    switch(action.type){\r\n        case UPDATE_COLOR:\r\n            return {...state,color:action.color}\r\n            default:\r\n            return state\r\n    }\r\n}\r\nconst Color = (props) => {\r\n    //props 相当于子组件 \r\n    // console.log(props)\r\n    const [{color,size},dispatch]=useReducer(reducer,{color:'blue',size:17})\r\n    return ( <ColorContext.Provider value={{color,size,dispatch}}>\r\n    {props.children}\r\n    </ColorContext.Provider> );\r\n}\r\n \r\nexport default Color;","import React,{useContext } from 'react';\r\nimport {ColorContext} from './Color';\r\n\r\nconst ShowArea = () => {\r\n    const {color,size} = useContext(ColorContext);\r\n    return ( <div style={{color:color}}>字体颜色为{color}+{size}</div> );\r\n}\r\n \r\nexport default ShowArea;","import React,{useContext} from 'react';\r\nimport { ColorContext, UPDATE_COLOR } from './Color';\r\nconst Buttons = () => {\r\n    const {dispatch}= useContext(ColorContext)\r\n    return ( <div>\r\n\r\n        <button onClick={()=>dispatch({type:UPDATE_COLOR,color:'red'})}>红色</button>\r\n        <button onClick={()=>dispatch({type:UPDATE_COLOR,color:'purple'})}>紫色</button>\r\n    </div> );\r\n}\r\n \r\nexport default Buttons;","import React, { useReducer } from 'react';\r\nimport ShowArea from './ShowArea';\r\nimport Buttons from './Buttons';\r\nimport Color from './Color'\r\nconst SimulationRedux = () => {\r\n    return (<div>\r\n        <Color>\r\n            <ShowArea />\r\n            <Buttons />\r\n        </Color>\r\n    </div>);\r\n}\r\n\r\nexport default SimulationRedux;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { validate } from '@babel/types';\r\n\r\nconst GetData = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoad] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [url, setUrl] = useState('https://www.easy-mock.com/mock/5d00b80272591921753cdf78/reactDemo01/planStatusList')\r\n    const [isError, setIsError] = useState(false)\r\n   \r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        //方法一\r\n        // axios.get(url)\r\n        // .then(res=>{\r\n        //     if(!isCancelled){\r\n        //         setData(res.data)\r\n        //         console.log(res)\r\n        //     }\r\n        // })\r\n        // .catch(err=>{\r\n        //     console.log(err)\r\n        // })\r\n        //方法二\r\n        getDataFunc(url)\r\n        .then(res=>{\r\n                 if(!isCancelled){\r\n                setData(res.data)\r\n                console.log(res)\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n        // async function getData() {\r\n        //     //给获取数据时页面设置loading\r\n        //     setIsError(false)\r\n        //     setLoad(true)\r\n        //     // //错误处理机制\r\n        //     try {\r\n        //         if (!isCancelled) {\r\n        //             const result =[{\r\n        //                 \"key\": \"2\",\r\n        //                 \"name\": \"Joe Black\",\r\n        //                 \"age\": 42,\r\n        //                 \"address\": \"London No. 1 Lake Park\",\r\n        //                 \"description\": \"My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.\",\r\n        //                 \"type\": \"YES\",\r\n        //                 \"method\": \"NCB\",\r\n        //                 \"value\": 1\r\n        //               }]\r\n        //             //  await axios.get(url);\r\n        //             setData(result)\r\n        //         }\r\n\r\n        //     } catch (error) {\r\n        //         setIsError(true)\r\n        //     }\r\n\r\n        //     setLoad(false)\r\n        // }\r\n        // // To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function\r\n        // if (!isCancelled) {\r\n        //     getData()\r\n        // }\r\n        return () => { isCancelled = true }\r\n    }, [url])\r\n    function changeIpt(event) {\r\n        setQuery(event.target.value)\r\n    }\r\n    return (<div>\r\n        <input type=\"text\" value={query} onChange={changeIpt}></input>\r\n        {/* planStatusList */}\r\n        <button type=\"button\" onClick={() => { query == 'a' ? setUrl('https://www.easy-mock.com/mock/5d00b80272591921753cdf78/reactDemo01/getData') : setUrl('https://www.easy-mock.com/mock/5d00b80272591921753cdf78/reactDemo01/') }}>转换</button>\r\n        {isError && <div>捕捉到错误</div>}\r\n        {\r\n            loading ? <div>loading...</div>\r\n                : <div>\r\n                    <ul>\r\n                        {\r\n                            data.map((val, index) => {\r\n                                return <li key={index}>{val.name}</li>\r\n\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n        }\r\n\r\n    </div>);\r\n}\r\n\r\nexport default GetData;\r\n\r\nasync function getDataFunc(url){\r\n    let aJson =await  axios.get(url)\r\n    return aJson\r\n}\r\n\r\n\r\n","import React,{useEffect} from 'react';\r\nimport CountNumI from '../components/CountNumI';\r\nimport CountNumH from '../components/CountNumH';\r\nimport UseContext from '../components/UseContext';\r\nimport ReducerDemo from '../components/ReducerDemo';\r\nimport SimulationRedux from '../components/toRedux/SimulationRedux';\r\nimport GetData from '../components/asyncRequest/GetData';\r\nimport { Link } from \"react-router-dom\";\r\nconst HookPage = () => {\r\n    \r\n    return (<div>\r\n        <div>\r\n            <h2>类实现</h2>\r\n            <CountNumI></CountNumI>\r\n        </div>\r\n        <div>\r\n            <h2>react-hooks实现</h2>\r\n            <CountNumH></CountNumH>\r\n        </div>\r\n        <div>\r\n            <h2>Context实现</h2>\r\n            <UseContext></UseContext>\r\n        </div>\r\n        <div>\r\n            <h2>useReducer实现</h2>\r\n            <ReducerDemo></ReducerDemo>\r\n        </div>\r\n        <div>\r\n            <h2>useReducer 和 useContext实现redux</h2>\r\n            <SimulationRedux></SimulationRedux>\r\n        </div>\r\n\r\n        <div>\r\n            <h2>发起异步请求</h2>\r\n            <GetData></GetData>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default HookPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst Gif = ({ gif }) => (<img src={gif} alt=\"gif\"></img>)\r\n\r\n\r\nGif.propTypes = {\r\n    gif: PropTypes.string.isRequired\r\n}\r\nexport default Gif;","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Button = (props) => {\r\n    \r\n    const handleClick = () => {\r\n        props.clickHandler(props.name)\r\n    }\r\n    const classNames = [\"component-button \", props.orange ? \"orange \" : \"\", props.wide ? \"wide\" : \"\"]\r\n    return (<div className={classNames.join('').trim()}>\r\n        <button onClick={handleClick}>{props.name}</button>\r\n    </div>);\r\n}\r\nButton.propTypes = {\r\n    name: propTypes.string,\r\n    orange: propTypes.bool,\r\n    wide: propTypes.bool,\r\n    clickHandler: propTypes.func\r\n}\r\nexport default Button;","// 原文链接 https://juejin.im/post/5d5a3a015188255d827cde4b?utm_source=gold_browser_extension#heading-0\r\n\r\nimport React, { useState } from 'react';\r\nimport Gif from '../components/drags/Gif';\r\n\r\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move';\r\n// sortableContainer 是所有可排序元素的容器；\r\nconst SortableGifsContainer = sortableContainer(({ children }) => <div className=\"gifs\">{children}</div>)\r\n// sortableElement 是每个可渲染元素的容器\r\nconst SortableGif = sortableElement(({ gif }) => <Gif key={gif} gif={gif}></Gif>)\r\n\r\nconst DragPic = () => {\r\n    const [gifs, useGifs] = useState(['https://media.giphy.com/media/3ohhwoWSCtJzznXbuo/giphy.gif', 'https://media.giphy.com/media/l46CbZ7KWEhN1oci4/giphy.gif', 'https://media.giphy.com/media/3ohzgD1wRxpvpkDCSI/giphy.gif', 'https://media.giphy.com/media/xT1XGYy9NPhWRPp4pq/giphy.gif',])\r\n    const [newGifs, setNewGifs] = useState([\r\n        'https://media.giphy.com/media/xiOgHgY2ceKhm46cAj/giphy.gif',\r\n        'https://media.giphy.com/media/3oKIPuMqYfRsyJTWfu/giphy.gif',\r\n        'https://media.giphy.com/media/4ZgLPakqTajjVFOVqw/giphy.gif',\r\n        'https://media.giphy.com/media/3o7btXIelzs8nBnznG/giphy.gif',\r\n    ]);\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex, collection }) => {\r\n        switch (collection) {\r\n            case 'gifs':\r\n                setNewGifs(arrayMove(gifs, oldIndex, newIndex))\r\n                break;\r\n            case 'newGifs':\r\n                setNewGifs(arrayMove(newGifs, oldIndex, newIndex))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (<div className=\"box\">\r\n        <h2>Drag those GIFs around</h2>\r\n        <h2>Set 1</h2>\r\n        {gifs.map((gif, i) => <Gif collection=\"gifs\" key={gif} gif={gif}></Gif>)}\r\n\r\n        <h2>Set 2</h2>\r\n        <SortableGifsContainer axis=\"x\" onSortEnd={onSortEnd}>\r\n            {newGifs.map((gif, i) => (\r\n                <SortableGif\r\n                    index={i}\r\n                    key={gif}\r\n                    gif={gif}\r\n                    collection=\"newGifs\"\r\n\r\n                />\r\n            ))}\r\n\r\n        </SortableGifsContainer>\r\n    </div>);\r\n}\r\n\r\nexport default DragPic;","import React from 'react';\r\nimport Button from './Button'\r\nconst BtnPanel = ({ handleClick }) => {\r\n    const clickHandler = buttonName => {\r\n        // console.log(buttonName)\r\n        handleClick(buttonName)\r\n    }\r\n    return (<div className=\"component-button-panel\">\r\n        <div>\r\n            <Button name=\"AC\" clickHandler={clickHandler}></Button>\r\n            <Button name=\"+/-\" clickHandler={clickHandler}></Button>\r\n            <Button name=\"%\" clickHandler={clickHandler}></Button>\r\n            <Button name=\"÷\" clickHandler={clickHandler} orange></Button>\r\n        </div>\r\n        <div>\r\n          <Button name=\"7\" clickHandler={clickHandler} />\r\n          <Button name=\"8\" clickHandler={clickHandler} />\r\n          <Button name=\"9\" clickHandler={clickHandler} />\r\n          <Button name=\"x\" clickHandler={clickHandler} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"4\" clickHandler={clickHandler} />\r\n          <Button name=\"5\" clickHandler={clickHandler} />\r\n          <Button name=\"6\" clickHandler={clickHandler} />\r\n          <Button name=\"-\" clickHandler={clickHandler} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"1\" clickHandler={clickHandler} />\r\n          <Button name=\"2\" clickHandler={clickHandler} />\r\n          <Button name=\"3\" clickHandler={clickHandler} />\r\n          <Button name=\"+\" clickHandler={clickHandler} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"0\" clickHandler={clickHandler} wide />\r\n          <Button name=\".\" clickHandler={clickHandler} />\r\n          <Button name=\"=\" clickHandler={clickHandler} orange />\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default BtnPanel;","import React from 'react';\r\nimport propTypes from 'prop-types'\r\nconst Display = ({value}) => {\r\n    return ( <div className=\"component-display\">\r\n      {value}\r\n    </div> );\r\n}\r\nDisplay.propTypes={\r\n    value:propTypes.string\r\n}\r\nexport default Display;","import Big from 'big.js';\r\nexport default function operate(numberOne,numberTwo,operation){\r\n    const one = Big(numberOne||'0');\r\n    const two = Big(numberTwo||(operation ==='÷'||operation ==='x'?\"1\":\"0\"))\r\nif(operation ===\"+\"){\r\n    return one.plus(two).toString();\r\n}\r\nif(operation ==='-'){\r\n    return one.minus(two).toString();\r\n}\r\nif(operation ==='x'){\r\n    return one.times(two).toString();\r\n}\r\nif(operation==='÷'){\r\n    if(two ===\"0\"){\r\n        alert(\"Divide by 0 error\");\r\n        return 0;\r\n    }else{\r\n        return one.div(two).toString();\r\n    }\r\n}\r\nthrow Error(`Unknown operation '${operation}'`);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport '../css/calculator.css';\r\nimport BtnPanel from '../components/calculator/BtnPanel';\r\nimport Display from '../components/calculator/Display';\r\nimport calculate from '../utils/calculatorC';\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            next: null,\r\n            total: null,\r\n            operation: null\r\n        }\r\n    }\r\n    handleClick = buttonName => {\r\n        console.log(buttonName)\r\n        this.setState(calculate(this.state, buttonName));\r\n    }\r\n    render() {\r\n        const { next, total } = this.state\r\n        return (<div className=\"calculator\">\r\n            <Display value={next || total || '0'}></Display>\r\n            <BtnPanel handleClick={this.handleClick}></BtnPanel>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Calculator;\r\n// const Calculator = () => {\r\n//     const handleClick = buttonName => {\r\n//         // console.log(buttonName)\r\n//     }\r\n//     return (<div className=\"calculator\">\r\n//         <Display></Display>\r\n//         <BtnPanel handleClick={handleClick}></BtnPanel>\r\n//     </div>);\r\n// }\r\n\r\n// export default Calculator;","import React,{useCallback,useState} from 'react';\r\n import CallbackChild from './CallbackChild';\r\nconst set = new Set();\r\nconst UseCallback = () => {\r\n    const [num,setNum] = useState(1);\r\n    const [val,setVal] = useState('');\r\n    const callback =useCallback(()=>{\r\n        // 我们可以看到，每次修改count，set.size就会+1，这说明useCallback依赖变量count，\r\n        // count变更时会返回新的函数；而val变更时，set.size不会变，说明返回的是缓存的旧版本函数\r\n        console.log(num)\r\n        return num;\r\n    },[num])\r\n    set.add(callback)\r\n    return ( <div>\r\n        <h4>num {num}</h4>\r\n        <h4>set.size{set.size}</h4>\r\n        <div>\r\n            <button onClick={()=>setNum(num+1)}>+</button>\r\n            <input value={val} onChange={event=>setVal(event.target.value)}>\r\n            </input>\r\n        </div>\r\n        <div>\r\n            <h4>\r\n            useCallback 在父子组件中的应用 \r\n            </h4>\r\n            <CallbackChild callback={callback}></CallbackChild>\r\n        </div>\r\n    </div> );\r\n}\r\n \r\nexport default UseCallback;","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import React from 'react';\nimport {  Router, Route, Link, Redirect, Switch } from \"react-router-dom\";\nimport './App.css';\nimport HookPage from './views/HookPage';\nimport DragPic from './views/DragPic';\nimport Calculator from './views/Calculator';\nimport UseMemoRef from './views/UseMemoRef';\nimport GetWindowSize from './views/GetWindowSize';\nimport { history } from './utils/history';\nfunction App() {\n  return (\n    <div className=\"App\">\n      help me\n      <Router history={history}>\n        <div className=\"link\">\n          <Link to={`${process.env.PUBLIC_URL}/hook`}>Hooks</Link>\n          <Link to={`${process.env.PUBLIC_URL}/drag`}>Dragging</Link>\n          <Link to={`${process.env.PUBLIC_URL}/calculator`}>Calculator</Link>\n          <Link to={`${process.env.PUBLIC_URL}/useMemo`}>UseMemo/Ref</Link>\n          <Link to={`${process.env.PUBLIC_URL}/sizeWin`}>Resize Window</Link>\n          <div>\n            Hello World\n        </div>\n          <Switch>\n            <Route path={`${process.env.PUBLIC_URL}/hook`} component={HookPage}></Route>\n            <Route path={`${process.env.PUBLIC_URL}/`} component={HookPage}></Route>\n            {/* <Route path={`${process.env.PUBLIC_URL}/drag`} component={DragPic}></Route>\n            <Route path={`${process.env.PUBLIC_URL}/calculator`} component={Calculator}></Route>\n            <Route path={`${process.env.PUBLIC_URL}/useMemo`} component={UseMemoRef}></Route>\n            <Route path={`${process.env.PUBLIC_URL}/sizeWin`} component={GetWindowSize}></Route>\n            <Redirect path={`${process.env.PUBLIC_URL}/`} to={`${process.env.PUBLIC_URL}/useMemo`}></Redirect> */}\n          </Switch>\n        </div>\n\n\n\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}