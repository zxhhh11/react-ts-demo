{"version":3,"sources":["views/home/complaints/Complaints.js","utils/history.js","views/home/procumentPlan/PlanHome.js","actions/planActions.js","views/home/procumentPlan/PlanHome.Container.js","components/StepperNoContent.js","components/modals/DeleteModal.js","views/home/procumentPlan/components/ActivityModule.js","views/home/procumentPlan/components/ActivityList.js","views/home/procumentPlan/components/PP.js","views/home/procumentPlan/components/PDS.js","components/files/UploadCustom.js","views/home/procumentPlan/components/Documents.js","views/home/procumentPlan/pages/PlanDetail.js","views/home/management/index.js","components/TableList.js","views/home/procumentPlan/pages/PlanStatusList.js","views/home/procumentPlan/pages/PlanStatusList.Container.js","views/home/Nofound.js","views/home/index.js","views/home/index.Container.js","components/LoginForm.js","views/login/Login.js","views/login/Login.Container.js","utils/setHtmlFontSize.js","App.js","App.Container.js","serviceWorker.js","constants/homeConstants.js","reducers/UserReducer.js","reducers/index.js","stores/index.js","index.js"],"names":["Complaints","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ClickBtn","console","log","window","alert","state","react_default","a","createElement","es_button","onClick","type","Component","history","createBrowserHistory","ButtonGroup","Button","Group","PlanHome","toList","action","recordObj","setState","push","pathname","concat","process","message","warning","toListNew","row","rowId","dataSource","loading","_this2","getPlanList","then","res","data","catch","error","_this3","_this$state","columns","title","dataIndex","key","render","text","bind","style","cursor","background","padding","marginBottom","fontSize","fontWeight","color","display","es_row","gutter","es_col","span","react_router_dom","to","card","bordered","icon","height","margin","float","table","size","rowClassName","record","onRow","index","pagination","pageSize","planActions","dispatch","axios","get","getStatusPlanList","connect","Step","Steps","steps","defineProperty","content","status","StepperNoContent","current","map","item","popover","DeleteModal","visible","_this$props","modal","onOk","handleOk","onCancel","handleCancel","footer","React","ActivityModule","showModal","ModalText","confirmLoading","setTimeout","handleSubmitActivity","e","preventDefault","form","validateFields","err","values","handleSubmitNew","activityObj","getFieldDecorator","width","es_form","className","labelCol","wrapperCol","onSubmit","Item","label","initialValue","packageNo","input","autoComplete","description","rules","required","unit","quantity","method","value","offset","htmlType","Form","create","name","TabPane","Tabs","ActivityList","callback","handleChange","filters","sorter","sortedInfo","getColumnSearchProps","filterDropdown","_ref","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","node","searchInput","placeholder","onChange","target","onPressEnter","handleSearch","marginRight","handleReset","filterIcon","filtered","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","select","deleteRecord","searchText","pageNumber","showModalNew","isShowActions","objectSpread","b","length","sortOrder","columnKey","order","age","address","paddingBottom","ActivityList_ButtonGroup","tabs","defaultActiveKey","tab","slice","components_ActivityModule","PPForm","handleSubmitPP","cancelEdit","ppObj","setFieldsValue","owner","onFieldsChange","_this$props$ppObj","marginLeft","PP","PDS","handleSubmitPDS","pdsObj","assessment","factors","research","risk","arrangements","plan","uploadCustom","Select","Option","normFile","Array","isArray","fileList","componentWillUnmount","handleUpload","uploading","fileObj","formData","FormData","forEach","file","append","filename","comments","_this$state2","nextProps","prevState","EditableContext","createContext","EditableFormRow","objectWithoutProperties","Provider","EditableCell","editing","toggleEdit","focus","save","handleSave","currentTarget","id","renderCell","_this$props2","children","onBlur","paddingRight","_this$props3","editable","restProps","Consumer","Documents","newData","toConsumableArray","findIndex","splice","showUploadModal","downLoadFile","components","body","cell","col","onCell","onRemove","indexOf","newFileList","beforeUpload","upload","marginTop","Documents_ButtonGroup","href","download","UploadCustom","ProcPlan","handleSubmitFile","lable","location","localStorage","getItem","isDisabled","backgroundColor","components_StepperNoContent","divider","tabPosition","position","PlanDetail_TabPane","components_PP","components_PDS","components_ActivityList","components_Documents","Management","changedFields","mapPropsToFields","username","createFormField","onValuesChange","_","layout","handleFormChange","fields","_ref2","PlanStatusList","scroll","x","expandedRowRender","modals_DeleteModal","Nofound","isNoFound","hideNav","user","Header","Layout","Content","Footer","breadcrumbNameMap","/home","/home/review","/home/approved","/home/submited","/home/saved","/home/plan","/management","/complaints","Bread","withRouter","pathSnippets","split","filter","i","extraBreadcrumbItems","url","join","breadcrumb","breadcrumbItems","HomePage","selectKey","lineHeight","menu","theme","mode","defaultSelectedKeys","react_router","exact","path","component","ProcumentPlan","from","textAlign","bottom","NormalLoginForm","handleSubmit","setItem","FromChange","password","prefix","setfieldsvalue","autosize","valuePropName","es_checkbox","WrappedNormalLoginForm","Login","userName","clearStore","react","paddingTop","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","LoginForm","setHtmlFontSize","html","document","documentElement","htmlWidth","clientWidth","App","resize","addEventListener","removeEventListener","Boolean","hostname","match","HomeConstants","defaultState","rootReducer","combineReducers","arguments","loggleMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","App_Container","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40543c16.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button} from 'antd';\r\nclass Complaints extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    componentDidMount(){\r\n      \r\n    }\r\n    ClickBtn=()=>{\r\n        console.log('click btn')\r\n        window.alert('test selenium')\r\n    }\r\n    render() { \r\n        return (<div>\r\n            Complaints\r\n            <Button onClick={this.ClickBtn}  type=\"primary\">test selenium</Button>\r\n        </div>  );\r\n    }\r\n}\r\n \r\nexport default Complaints;","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import React, { Component } from 'react';\r\nimport { Card, Col, Row, Button, Icon, Table, message } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { history } from '../../../utils/history';\r\nconst ButtonGroup = Button.Group;\r\nclass PlanHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rowId: '0',\r\n            dataSource:[],\r\n            loading: false,\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            loading:true\r\n        })\r\n        this.props.getPlanList()\r\n        .then(res=>{\r\n          if(res){\r\n              this.setState({\r\n                dataSource:res.data,\r\n                loading:false\r\n              })\r\n          }\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n    toList = (action) => {\r\n        let { recordObj } = this.state\r\n        console.log(recordObj)\r\n        this.setState({\r\n            action: action\r\n        })\r\n        if (action === 'create') {\r\n            history.push({ pathname: `${process.env.PUBLIC_URL}/home/plan`, state: { recordObj: {}, action: action } })\r\n        } else {\r\n            if (recordObj) {\r\n                history.push({ pathname: `${process.env.PUBLIC_URL}/home/plan`, state: { recordObj: recordObj, action: action } })\r\n            } else {\r\n                message.warning('Please select one line first')\r\n            }\r\n        }\r\n    }\r\n    toListNew =(row)=>{\r\n        history.push({ pathname: `${process.env.PUBLIC_URL}/home/plan`, state: { recordObj: row, action:'approve' } })\r\n    }\r\n    render() {\r\n        let {dataSource,loading} = this.state\r\n        const columns = [\r\n            {\r\n                title: 'Title',\r\n                dataIndex: 'title',\r\n                key: 'title',\r\n                render: (text, row) => <u onClick={this.toListNew.bind(this, row)} style={{ cursor: 'pointer' }} >{text}</u>,\r\n            },\r\n            {\r\n                title: 'Description',\r\n                dataIndex: 'description',\r\n                key: 'description',\r\n            },\r\n            {\r\n                title: 'Owner',\r\n                dataIndex: 'owner',\r\n                key: 'owner',\r\n            }\r\n        ];\r\n        return (<div>\r\n            <div style={{ background: '#fff', padding: '0.5rem 1rem', marginBottom: 12 }}>\r\n                <div>\r\n                    <span style={{ fontSize: '0.9rem', fontWeight: '500', color: '#000', marginBottom: 6, display: 'inline-block', }}>Procurement Plan Status</span>\r\n                    <Row gutter={40}>\r\n                        <Col span={6} >\r\n                            <Link to={`${process.env.PUBLIC_URL}/home/saved`}>    <Card bordered={false}>\r\n                                <div>\r\n                                    <Icon type=\"save\" style={{ fontSize: '1.8rem', marginBottom: '0.6rem' }}></Icon>\r\n                                </div>\r\n                                <span>Saved </span>\r\n                            </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Link to={`${process.env.PUBLIC_URL}/home/submited`}>     <Card bordered={false}>\r\n                                <div>\r\n                                    <Icon type=\"highlight\" style={{ fontSize: '1.8rem', marginBottom: '0.6rem' }}></Icon>\r\n                                </div>\r\n                                <span>\r\n                                    Submitted\r\n                                </span>\r\n                            </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Link to={`${process.env.PUBLIC_URL}/home/review`}>\r\n                                <Card bordered={false}>\r\n                                    <div>\r\n                                        <Icon type=\"eye\" style={{ fontSize: '1.8rem', marginBottom: '0.6rem' }}></Icon>\r\n                                    </div>\r\n                                    <span>\r\n                                        Review\r\n                                   </span>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Link to={`${process.env.PUBLIC_URL}/home/approved`}>\r\n                                <Card bordered={false}>\r\n                                    <div>\r\n                                        <Icon type=\"check-circle\" style={{ fontSize: '1.8rem', marginBottom: '0.6rem' }}></Icon>\r\n                                    </div>\r\n                                    <span>Approved</span>\r\n                                </Card>\r\n                            </Link>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n\r\n            </div>\r\n            <div style={{ background: '#fff', padding: '0.5rem 1rem 40px', height: 'auto' }}>\r\n                <div>\r\n                    <span style={{ fontSize: '0.9rem', fontWeight: '500', color: '#000' }}>Procurement Plan List</span>\r\n                    <ButtonGroup style={{ margin: '0 2rem 6px', float: 'right' }}>\r\n                        {/* <Button type=\"primary\" onClick={this.toList.bind(this, 'approve')}>\r\n                            <Icon type=\"eye\" />\r\n                            View\r\n                            </Button> */}\r\n                        <Button type=\"primary\" onClick={this.toList.bind(this, 'edit')}>\r\n                            Edit\r\n                                <Icon type=\"edit\" />\r\n                        </Button>\r\n                        {/* <Button type=\"primary\" onClick={this.toList.bind(this, 'delete')}>\r\n                        Delete\r\n                            <Icon type=\"delete\" />\r\n                    </Button> */}\r\n                        <Button type=\"primary\" onClick={this.toList.bind(this, 'create')}>\r\n                            Create\r\n                            <Icon type=\"plus\" />\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n                <Table size='small'\r\n                loading={loading}\r\n                    rowClassName={(record) => {\r\n                        return record.key === this.state.rowId ? 'clickRowStyl' : '';\r\n                    }}\r\n                    onRow={(record, index) => {\r\n                        return {\r\n                            onClick: () => {\r\n                                this.setState({\r\n                                    rowId: record.key,\r\n                                    recordObj: record\r\n                                });\r\n                            },\r\n                        };\r\n                    }}\r\n                    bordered={true}\r\n                    style={{ background: '#fff' }} columns={columns} pagination={{ pageSize: 5 }} dataSource={dataSource} />\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default PlanHome;","import axios from 'axios';\r\nexport const planActions = {\r\n    getPlanList,\r\n    getStatusPlanList\r\n}\r\nfunction getPlanList(){\r\n  \r\n    return dispatch=>{\r\n        return  axios.get('https://www.easy-mock.com/mock/5d00b80272591921753cdf78/reactDemo01/planlist')\r\n          .then(res=>{\r\n              console.log(res)\r\n              return res\r\n          })\r\n          .catch(error=>{\r\n              console.log(error)\r\n          })\r\n  }\r\n}\r\nfunction getStatusPlanList(){\r\n    return dispatch=>{\r\n        return  axios.get('https://www.easy-mock.com/mock/5d00b80272591921753cdf78/reactDemo01/planStatusList')\r\n          .then(res=>{\r\n              console.log(res)\r\n              return res\r\n          })\r\n  }\r\n}","import { connect } from 'react-redux';\r\nimport PlanHome from './PlanHome';\r\nimport {planActions} from '../../../actions/planActions'\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPlanList:()=>dispatch(planActions.getPlanList())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanHome);","import React, { Component } from 'react';\r\nimport { Steps, Button, message, Icon,Popover } from 'antd';\r\n\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    title: 'PP and PDS',\r\n    content: 'PP and PDS',\r\n    index:0,\r\n    icon:'user',\r\n    status:'success',\r\n    content : (\r\n      <div>\r\n        <p>PP&nbsp;<Icon type='check' /></p>\r\n        <div>PDS&nbsp;<Icon type='check' /></div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    title: 'Review',\r\n    content: 'Review',\r\n    index:1,\r\n    icon:'file',\r\n    status:'success',\r\n    content : (\r\n      <div>\r\n        <div>Review&nbsp;<Icon type='check' /></div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    title: 'Create-activity',\r\n    content: 'Create-activity',\r\n    index:2,\r\n    icon:'idcard',\r\n    status:'unComplete',\r\n    content : (\r\n      <div>\r\n        <div>Create-activity&nbsp;<Icon type='close' /></div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    title: 'Review',\r\n    content: 'Review',\r\n    index:3,\r\n    icon:'notification',\r\n    status:'unComplete',\r\n    content : (\r\n      <div>\r\n        <div>Review&nbsp;<Icon type='close' /></div>\r\n      </div>\r\n    )\r\n  }\r\n];\r\n\r\nclass StepperNoContent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          current: 1,\r\n          icon:<Icon type=\"loading\" />\r\n        };\r\n      }\r\n    render() { \r\n        const {current} = this.state;\r\n        return ( <div>\r\n            <Steps current={current} status=\"process\">\r\n              {steps.map((item,key)=> (\r\n                // <Icon type={item.icon} /> \r\n                  <Step  key={item.title+key} icon={<Popover content={item.content} ><Icon style={{color:item.status==='success'?'#1890ff':''}} type='info-circle' /> </Popover>}  title={item.title} />\r\n              ))}\r\n            </Steps>\r\n          </div> );\r\n    }\r\n}\r\n \r\nexport default StepperNoContent;","import React from 'react';\r\nimport { Modal, Button } from 'antd';\r\n\r\nclass DeleteModal extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    visible: false,\r\n  };\r\n\r\n//   showModal = () => {\r\n//     this.setState({\r\n//       visible: true,\r\n//     });\r\n//   };\r\n\r\n//   handleOk = () => {\r\n//     this.setState({ loading: true });\r\n//     setTimeout(() => {\r\n//       this.setState({ loading: false, visible: false });\r\n//     }, 3000);\r\n//   };\r\n\r\n//   handleCancel = () => {\r\n//     this.setState({ visible: false });\r\n//   };\r\n\r\n  render() {\r\n    const { visible, loading } = this.props;\r\n    return (\r\n      <div>\r\n       \r\n        <Modal\r\n          visible={visible}\r\n          title=\"Delete Table List\"\r\n          onOk={this.props.handleOk}\r\n          onCancel={this.props.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.props.handleCancel}>\r\n              Return\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.props.handleOk}>\r\n              Submit\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteModal\r\n","import React, { Component } from 'react';\r\nimport { Modal, Button, Form, Input } from 'antd';\r\n\r\nclass ActivityModule extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props)\r\n        this.state = {\r\n            ModalText: 'Content of the modal',\r\n            visible: false,\r\n            confirmLoading: false\r\n        };\r\n    }\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n    handleOk = () => {\r\n        this.setState({\r\n            ModalText: 'The modal will be closed after two seconds',\r\n            confirmLoading: true,\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                visible: false,\r\n                confirmLoading: false,\r\n            });\r\n        }, 2000);\r\n    };\r\n    handleSubmitActivity = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n    handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    handleSubmitNew = () => {\r\n        this.props.handleOk()\r\n    }\r\n    render() {\r\n        const { ModalText, activityObj } = this.state;\r\n        console.log(activityObj)\r\n        const { visible, loading, handleOk, handleCancel, record, action } = this.props;\r\n        console.log(record, action)\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (<div>\r\n            <Modal\r\n                title=\"Activity Detail\"\r\n                visible={visible}\r\n                width=\"80vw\"\r\n                onCancel={handleCancel}\r\n                // footer={[\r\n                //     <Button key=\"back\" onClick={handleCancel}>\r\n                //       Return\r\n                //     </Button>,\r\n                //     <Button key=\"submit\" type=\"primary\" loading={loading} onClick={this.handleSubmitNew}>\r\n                //       Submit\r\n                //     </Button>,\r\n                //   ]}\r\n                footer={null}\r\n            >\r\n                <Form className=\"pds-part\" labelCol={{ span: 5 }} wrapperCol={{ span: 12 }} onSubmit={this.handleSubmitActivity}>\r\n                    <Form.Item label=\"Package No\">\r\n                        {getFieldDecorator('packageNo', {\r\n                            initialValue: record.packageNo,\r\n                            // rules: [{ required: true, message: 'Please input your strategic assessment!' }],\r\n                        })(<Input autoComplete=\"off\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"General Description\">\r\n                        {getFieldDecorator('description', {\r\n                            initialValue: record.description,\r\n                            rules: [{ required: true, message: 'Please input your  market research!' }],\r\n                        })(<Input autoComplete=\"off\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Unit\">\r\n                        {getFieldDecorator('unit', {\r\n                            initialValue: record.unit,\r\n                            rules: [{ required: true, message: 'Please input your  risk management!' }],\r\n                        })(<Input autoComplete=\"off\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Quantity\">\r\n                        {getFieldDecorator('quantity', {\r\n                            initialValue: record.quantity,\r\n                            rules: [{ required: true, message: 'Please input your operational factors impacting on procurement!' }],\r\n                        })(<Input autoComplete=\"off\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Review Type\">\r\n                        {getFieldDecorator('type', {\r\n                            initialValue: record.type,\r\n                            rules: [{ required: true, message: 'Please input your Procurement Arrangements!' }],\r\n                        })(<Input autoComplete=\"off\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Method\">\r\n                        {getFieldDecorator('method', {\r\n                            initialValue: record.method,\r\n                            rules: [{ required: true, message: 'Please input your Procurement Plan!' }],\r\n                        })(<Input autoComplete=\"off\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Estimated value\">\r\n                        {getFieldDecorator('value', {\r\n                            initialValue: record.value,\r\n                            rules: [{ required: true, message: 'Please input your Procurement Plan!' }],\r\n                        })(<Input autoComplete=\"off\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item wrapperCol={{ span: 12, offset: 5 }} >\r\n                        <Button type=\"primary\" htmlType=\"submit\" >\r\n                            {action === 'create' ? 'Create' : action === 'edit' ? 'Save' : action === 'delelte' ? 'Delete' : 'View'}\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Form.create({ name: 'ActivityModule' })(ActivityModule);","import React from 'react';\r\nimport { Table, Input, Button, Icon, Tabs, message } from 'antd';\r\nimport DeleteModal from '../../../../components/modals/DeleteModal';\r\nimport ActivityModule from './ActivityModule'\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nconst ButtonGroup = Button.Group;\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        packageNo: 'NSUP-OSP-1',\r\n        quantity: 32,\r\n        unit: 'IBRD / 86360',\r\n        description: 'Oversight Service Provider(OSP) Package 1 (Jawa Tengah-1)',\r\n        type: 'Prior',\r\n        method: 'NCB',\r\n        value: '5,010,468.00'\r\n    },\r\n    {\r\n        key: '2',\r\n        packageNo: 'Joe Black',\r\n        quantity: 42,\r\n        unit: 'Lake Park',\r\n        description: 'I living in Sidney No. 1 Lake Park.',\r\n        type: 'YES',\r\n        method: 'NCB',\r\n        value: 1\r\n    },\r\n    {\r\n        key: '3',\r\n        packageNo: 'Jim Green',\r\n        quantity: 32,\r\n        unit: 'Sidney',\r\n        description: 'London No. 1 Lake Park.',\r\n        type: 'YES',\r\n        method: 'NCB',\r\n        value: 3\r\n    },\r\n    {\r\n        key: '4',\r\n        packageNo: 'Jim Red',\r\n        quantity: 32,\r\n        unit: 'London',\r\n        description: 'My name is Jim Red',\r\n        type: 'YES',\r\n        method: 'NCB',\r\n        value: 4\r\n    },\r\n    {\r\n        key: '5',\r\n        packageNo: 'John Brown',\r\n        quantity: 12,\r\n        unit: 'Lake Park',\r\n        description: 'My name is John Brown,living in New York No. 1 Lake Park.',\r\n        type: 'YES',\r\n        method: 'NCB',\r\n        value: 2\r\n    },\r\n    {\r\n        key: '6',\r\n        packageNo: 'Joe Black',\r\n        quantity: 32,\r\n        unit: 'No. 1',\r\n        description: 'My name is Joe Black, living in Sidney No. 1 Lake Park.',\r\n        type: 'YES',\r\n        method: 'NCB',\r\n        value: 7\r\n    },\r\n    {\r\n        key: '7',\r\n        packageNo: 'Jim Green',\r\n        quantity: 43,\r\n        unit: 'Sidney',\r\n        description: 'I am 42 years old, living in London No. 1 Lake Park.',\r\n        type: 'YES',\r\n        method: 'NCB',\r\n        value: 1\r\n    },\r\n    {\r\n        key: '8',\r\n        packageNo: 'Jim Red',\r\n        quantity: 56,\r\n        unit: 'Lake Park',\r\n        description: 'I am 32 years old, living in Sidney No. 1 Lake Park.',\r\n        type: 'YES',\r\n        method: 'NCB',\r\n        value: 5\r\n    },\r\n    {\r\n        key: '9',\r\n        packageNo: 'Green',\r\n        quantity: 43,\r\n        unit: 'Lake Park',\r\n        description: 'I am 42 years old, living in London No. 1 Lake Park.',\r\n        type: 'YES',\r\n        method: 'NCB',\r\n        value: 3\r\n    },\r\n    {\r\n        key: '10',\r\n        packageNo: 'Jim Red',\r\n        quantity: 56,\r\n        unit: 'London',\r\n        description: 'I am 32 years old, living in Sidney No. 1 Lake Park.',\r\n        type: 'NO',\r\n        method: 'NCB',\r\n        value: 2\r\n    },\r\n];\r\n\r\nclass ActivityList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            searchText: '',\r\n            sortedInfo: null,\r\n            loading: false,\r\n            visible: false,\r\n            isShowActions: false,\r\n            recordObj: {},\r\n            action: 'create',\r\n            rowId:'0'\r\n        };\r\n    }\r\n    callback = (key) => {\r\n        this.setState({\r\n            recordObj:{},\r\n            rowId:'0'\r\n        })\r\n    }\r\n    handleChange = (pagination, filters, sorter) => {\r\n        // console.log('Various parameters', pagination, filters, sorter);\r\n        this.setState({\r\n            sortedInfo: sorter,\r\n        });\r\n    };\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Button\r\n                    type=\"primary\" icon=\"search\"\r\n                    size=\"small\"\r\n                    onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n\r\n                    style={{ width: 90, marginRight: 8 }}\r\n                >\r\n                    Search\r\n                </Button>\r\n                <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                    Reset\r\n                </Button>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n            <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select());\r\n            }\r\n        }\r\n    });\r\n    deleteRecord = (record) => {\r\n        console.log(record)\r\n    }\r\n    handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n    onChange = (pageNumber) => {\r\n        console.log('Page: ', pageNumber);\r\n    }\r\n    showModal = (action, e) => {\r\n        let { recordObj } = this.state\r\n        console.log(recordObj, action)\r\n        if (!recordObj.packageNo) {\r\n            console.log(1)\r\n            if (action !== 'create') {\r\n               \r\n                message.warning('Please select one line first')\r\n            } else {\r\n                console.log(3)\r\n                this.setState({\r\n                    visible: true,\r\n                    action: action\r\n                });\r\n               \r\n            }\r\n        }else{\r\n            console.log(4)\r\n            this.setState({\r\n                visible: true,\r\n                action: action\r\n            });\r\n        }\r\n\r\n    };\r\n    showModalNew=(row)=>{\r\n        this.setState({\r\n            recordObj:row,\r\n            visible: true,\r\n            action: 'approve'\r\n        });\r\n    }\r\n    handleOk = () => {\r\n        this.setState({ loading: true });\r\n        setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n        }, 3000);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ visible: false,\r\n             });\r\n    };\r\n    // showAction = (record) => {\r\n    //     console.log(record)\r\n    //     // let isShowActions =this.state.isShowActions\r\n    //     this.setState({\r\n    //         isShowActions: true,\r\n    //         recordObj: record\r\n    //     })\r\n    // }\r\n    render() {\r\n        let { sortedInfo, isShowActions, recordObj, action } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        // const rowSelection = {\r\n        //     onChange: (selectedRowKeys, selectedRows) => {\r\n        //       this.setState({\r\n        //         isShowActions:true,\r\n        //         recordObj:selectedRows[0]\r\n        //       })\r\n        //     },\r\n        //     getCheckboxProps: record => ({\r\n        //       disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n        //       name: record.name,\r\n        //     }),\r\n        //     type:'radio'\r\n        //   };\r\n        const columns = [\r\n            {\r\n                title: 'PackageNo',\r\n                dataIndex: 'packageNo',\r\n                key: 'packageNo',\r\n                width: '5%',\r\n                // onClick={() => this.showAction(row)}\r\n                render: (text, row) => <u onClick={this.showModalNew.bind(this,row)} style={{cursor:'pointer'}} >{text}</u>,\r\n                ...this.getColumnSearchProps('name'),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === 'packageNo' && sortedInfo.order\r\n            },\r\n            {\r\n                title: 'General Description',\r\n                dataIndex: 'description',\r\n                key: 'description',\r\n                // width: '20%',\r\n                ...this.getColumnSearchProps('description'),\r\n                sorter: (a, b) => a.age - b.age,\r\n                sortOrder: sortedInfo.columnKey === 'description' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Unit',\r\n                dataIndex: 'unit',\r\n                key: 'unit',\r\n                width: '12%',\r\n                ...this.getColumnSearchProps('unit'),\r\n                sorter: (a, b) => a.address.length - b.address.length,\r\n                sortOrder: sortedInfo.columnKey === 'unit' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Quantity',\r\n                dataIndex: 'quantity',\r\n                key: 'quantity',\r\n                width: '8%',\r\n                ...this.getColumnSearchProps('quantity'),\r\n                sorter: (a, b) => a.age - b.age,\r\n                sortOrder: sortedInfo.columnKey === 'quantity' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Review Type',\r\n                dataIndex: 'type',\r\n                key: 'type',\r\n                width: '8%',\r\n                ...this.getColumnSearchProps('type'),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === 'type' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Method',\r\n                dataIndex: 'method',\r\n                key: 'method',\r\n                width: '6%',\r\n                ...this.getColumnSearchProps('method'),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === 'method' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Estimated Value',\r\n                dataIndex: 'value',\r\n                key: 'value',\r\n                width: '10%',\r\n                ...this.getColumnSearchProps('value'),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === 'value' && sortedInfo.order,\r\n            }\r\n        ];\r\n        // onChange:this.onChange  showQuickJumper:true,\r\n        return (\r\n            <div style={{ paddingBottom: '30px' }}>\r\n                <span >\r\n                    <ButtonGroup>\r\n                        {/* <Button type=\"primary\" onClick={this.showModal.bind(this, 'approve')}>\r\n                            <Icon type=\"eye\" />\r\n                            View\r\n                            </Button> */}\r\n                        <Button type=\"primary\" onClick={this.showModal.bind(this, 'edit')}>\r\n                            Edit\r\n                                <Icon type=\"edit\" />\r\n                        </Button>\r\n                        <Button type=\"primary\" onClick={this.showModal.bind(this, 'delelte')}>\r\n                            Delete\r\n                                <Icon type=\"delete\" />\r\n                        </Button>\r\n                        <Button type=\"primary\" onClick={this.showModal.bind(this, 'create')}>\r\n                            Create\r\n                            <Icon type=\"plus\" />\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                  \r\n                </span>\r\n                <Tabs defaultActiveKey=\"1\" onChange={this.callback}>\r\n                    <TabPane tab=\"Works\" key=\"1\">\r\n                        {/* rowSelection={rowSelection} scroll={{ x: 1800 }} */}\r\n                        <Table bordered  pagination={{ pageSize: 5 }} columns={columns} size='small'\r\n                             rowClassName={(record)=>{\r\n                                return   record.key === this.state.rowId ? 'clickRowStyl' : '';\r\n                               }}\r\n                               onRow={(record, index) => {\r\n                                   return {\r\n                                       onClick: () => {\r\n                                           this.setState({\r\n                                             rowId: record.key,\r\n                                             recordObj: record\r\n                                           });\r\n                                         },\r\n                                   };\r\n                               }}\r\n                            dataSource={data.slice(0, 4)} onChange={this.handleChange} />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Goods\" key=\"2\">\r\n                        <Table  pagination={{ pageSize: 5 }} columns={columns} size='small'\r\n                            bordered={false}\r\n                            rowClassName={(record)=>{\r\n                                return   record.key === this.state.rowId ? 'clickRowStyl' : '';\r\n                               }}\r\n                               onRow={(record, index) => {\r\n                                   return {\r\n                                       onClick: () => {\r\n                                           this.setState({\r\n                                             rowId: record.key,\r\n                                             recordObj: record\r\n                                           });\r\n                                         },\r\n                                   };\r\n                               }}\r\n                            dataSource={data.slice(3, 9)} onChange={this.handleChange} />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Non Consulting Services\" key=\"3\">\r\n                        <Table  pagination={{ pageSize: 5 }} columns={columns} size='small'\r\n                          rowClassName={(record)=>{\r\n                            return   record.key === this.state.rowId ? 'clickRowStyl' : '';\r\n                           }}\r\n                           onRow={(record, index) => {\r\n                               return {\r\n                                   onClick: () => {\r\n                                       this.setState({\r\n                                         rowId: record.key,\r\n                                         recordObj: record\r\n                                       });\r\n                                     },\r\n                               };\r\n                           }}\r\n                         dataSource={data} onChange={this.handleChange} />\r\n                    </TabPane>\r\n                    <TabPane tab=\"Consulting Services\" key=\"4\">\r\n                        <Table  pagination={{ pageSize: 5 }} columns={columns} size='small'\r\n                             rowClassName={(record)=>{\r\n                                return   record.key === this.state.rowId ? 'clickRowStyl' : '';\r\n                               }}\r\n                               onRow={(record, index) => {\r\n                                   return {\r\n                                       onClick: () => {\r\n                                           this.setState({\r\n                                             rowId: record.key,\r\n                                             recordObj: record\r\n                                           });\r\n                                         },\r\n                                   };\r\n                               }}\r\n                            dataSource={data.slice(2, 7)} onChange={this.handleChange} />\r\n                    </TabPane>\r\n                </Tabs>\r\n                <div>\r\n                    <ActivityModule action={action} record={action === 'create' ? {} : recordObj} visible={this.state.visible} handleCancel={this.handleCancel} handleOk={this.handleOk} showModal={this.showModal} loading={this.state.loading}></ActivityModule>\r\n                    {/* <DeleteModal handleCancel={this.handleCancel} handleOk={this.handleOk} showModal={this.showModal} loading={this.state.loading} ></DeleteModal> */}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActivityList","import React, { Component } from 'react';\r\nimport { Form, Input, Button} from 'antd';\r\nclass PPForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ppObj: {\r\n                // title:'',\r\n                // description:'',\r\n                // owner: ''\r\n                title: props.ppObj.title||'',\r\n                description: props.ppObj.description||'',\r\n                owner: props.ppObj.owner||''\r\n            }\r\n        }\r\n        console.log(props)\r\n    }\r\n   \r\n    handleSubmitPP = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n    cancelEdit=()=>{\r\n        let {ppObj} = this.props\r\n        this.props.form.setFieldsValue({\r\n            title:ppObj.title,\r\n            description:ppObj.description,\r\n            owner:ppObj.owner\r\n        })\r\n    }\r\n    onFieldsChange=(e)=>{\r\nconsole.log(e)\r\n    }\r\n    render() {\r\n        let { title,description,owner } = this.props.ppObj\r\n        const { getFieldDecorator } = this.props.form;\r\n        let { action } = this.props\r\n        console.log(this.props)\r\n        return (<div>\r\n            <Form labelCol={{ span: 5 }} wrapperCol={{ span: 12 }} onSubmit={this.handleSubmitPP}>\r\n                <Form.Item label=\"Tilte\">\r\n                    {getFieldDecorator('title', {\r\n                        initialValue: title,\r\n                        rules: [{ required: true, message: 'Please input your title!' }],\r\n                    })(<Input autoComplete=\"off\" />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Description\">\r\n                    {getFieldDecorator('description', {\r\n                        initialValue: description,\r\n                        rules: [{ required: true, message: 'Please input your description!' }],\r\n                    })(<Input autoComplete=\"off\" />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Owner\">\r\n                    {getFieldDecorator('owner', {\r\n                        initialValue: owner,\r\n                        rules: [{ required: true, message: 'Please input your owner!' }],\r\n                    })(<Input autoComplete=\"off\" />)}\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" >\r\n                        {action==='create' ? 'Create' : action==='edit'?'Save':'View'}\r\n                    </Button>\r\n                    {action==='edit' &&\r\n                    <Button type=\"primary\" style={{marginLeft:'1rem'}} onClick={this.cancelEdit}>\r\n                      Cancel\r\n                    </Button>\r\n               }\r\n                </Form.Item>\r\n                \r\n\r\n            </Form>\r\n        </div>);\r\n    }\r\n}\r\nconst PP = Form.create({ name: 'PP' })(PPForm);\r\nexport default  PP \r\n","import React, { Component } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nclass PDS extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pdsObj: {\r\n        assessment: '',\r\n        factors:'',\r\n        research:'',\r\n        risk:'', \r\n        arrangements:'',\r\n        plan:''\r\n      }\r\n    }\r\n  }\r\n  handleSubmitPDS = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    let { action } = this.props\r\n    const { getFieldDecorator } = this.props.form;\r\n    let { pdsObj } = this.state\r\n    let { assessment,factors,research,risk, arrangements,plan} = pdsObj\r\n    return (<div>\r\n      <Form className=\"pds-part\" labelCol={{ span: 5 }} wrapperCol={{ span: 12 }} onSubmit={this.handleSubmitPDS}>\r\n        <Form.Item label=\"Strategic Assessment\">\r\n          {getFieldDecorator('assessment', {\r\n            initialValue: assessment,\r\n            // rules: [{ required: true, message: 'Please input your strategic assessment!' }],\r\n          })(<Input autoComplete=\"off\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Factors Impacting\">\r\n          {getFieldDecorator('factors', {\r\n            initialValue: factors,\r\n            rules: [{ required: true, message: 'Please input your operational factors impacting on procurement!' }],\r\n          })(<Input autoComplete=\"off\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Market Research\">\r\n          {getFieldDecorator('research', {\r\n             initialValue: research,\r\n            rules: [{ required: true, message: 'Please input your  market research!' }],\r\n          })(<Input autoComplete=\"off\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Risk Management\">\r\n          {getFieldDecorator('risk', {\r\n             initialValue: risk,\r\n            rules: [{ required: true, message: 'Please input your  risk management!' }],\r\n          })(<Input autoComplete=\"off\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Procurement Arrangements\">\r\n          {getFieldDecorator('arrangements', {\r\n             initialValue: arrangements,\r\n            rules: [{ required: true, message: 'Please input your Procurement Arrangements!' }],\r\n          })(<Input autoComplete=\"off\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Procurement Plan\">\r\n          {getFieldDecorator('plan', {\r\n             initialValue: plan,\r\n            rules: [{ required: true, message: 'Please input your Procurement Plan!' }],\r\n          })(<Input autoComplete=\"off\" />)}\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ span: 12, offset: 5 }} >\r\n          <Button type=\"primary\" htmlType=\"submit\" >\r\n            {action === 'create' ? 'Create' : action === 'edit' ? 'Save' : 'View'}\r\n          </Button>\r\n          {action === 'edit' &&\r\n            <Button type=\"primary\" style={{ marginLeft: '1rem' }} onClick={this.cancelEdit}>\r\n              Cancel\r\n                    </Button>\r\n          }\r\n        </Form.Item>\r\n      </Form>\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default Form.create({ name: 'PDS' })(PDS);","import React, { Component } from 'react';\r\nimport { Modal, Button, Select, Form, Input, message } from 'antd';\r\nimport axios from 'axios'\r\nconst { Option } = Select;\r\nclass uploadCustom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: false,\r\n            fileObj: {\r\n                filename: '',\r\n                description: '',\r\n                title: '',\r\n                comments:''\r\n            },\r\n            uploading: false,\r\n            fileList: []\r\n\r\n        }\r\n    }\r\n    normFile = e => {\r\n        console.log('Upload event:', e);\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n    // handleSubmit = e => {\r\n    //     e.preventDefault();\r\n    //     let { action } = this.props\r\n    //     if (action) {\r\n    //         console.log('other operation')\r\n    //     } else {\r\n    //         this.props.form.validateFields((err, values) => {\r\n    //             if (!err) {\r\n    //                 console.log('Received values of form: ', values);\r\n    //             }\r\n    //         });\r\n    //     }\r\n\r\n    // };\r\n    componentWillUnmount = () => {\r\n        this.setState = (state,callback)=>{\r\n          return;\r\n        };\r\n    }\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        console.log(nextProps, prevState)\r\n        // console.log(recordObj.key === prevState.ppObj.key)\r\n        if (nextProps.fileList[nextProps.fileList.length-1] && nextProps.fileList !== prevState.fileList) {\r\n            console.log(nextProps.fileList !== prevState.fileList)\r\n            return {\r\n                fileObj: { \r\n                description: '',\r\n                title: '',\r\n                comments:'', \r\n                filename: nextProps.fileList[nextProps.fileList.length-1].name\r\n             },\r\n                fileList: nextProps.fileList,\r\n                uploading:false\r\n            };\r\n        }\r\n        if (nextProps.record && nextProps.record !== prevState.fileObj) {\r\n            console.log(nextProps.record)\r\n            return {\r\n                fileObj: { ...nextProps.record },\r\n                action: nextProps.action,\r\n                uploading:false\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    handleUpload = e => {\r\n        e.preventDefault();\r\n        let { action } = this.props\r\n\r\n        this.setState({\r\n            uploading: true,\r\n        },()=>{\r\n            this.props.handleCancel()\r\n        });\r\n        \r\n        if (action) {\r\n            console.log('other operation')\r\n        } else {\r\n\r\n\r\n            const { fileObj, fileList } = this.state;\r\n            this.props.form.validateFields((err, values) => {\r\n                if (!err) {\r\n                    console.log('Received values of form: ', values);\r\n                    const formData = new FormData();\r\n                    fileList.forEach(file => {\r\n                        console.log(file)\r\n                        formData.append('files[]', file);\r\n                    })\r\n                    for (var key in values) {\r\n                        formData.append(key, values[key]);\r\n                    }\r\n                    this.setState({\r\n                        uploading: true,\r\n                    });\r\n                    //upload file to server\r\n                    // axios.post('https://www.mocky.io/v2/5cc8019d300000980a055e76', formData)\r\n                    //     .then(res => {\r\n                    //         console.log(res)\r\n                    //         if (res) {\r\n                    //             this.setState({\r\n                    //                 fileList: [],\r\n                    //                 uploading: false,\r\n                    //                 visible: false,\r\n                    //             });\r\n                    //             message.success('upload successfully.');\r\n                    //         }\r\n                    //     })\r\n                    //     .catch(err => {\r\n                    //         if (err) {\r\n                    //             this.setState({\r\n                    //                 uploading: false,\r\n                    //             });\r\n                    //             message.error('upload failed.');\r\n                    //         }\r\n                    //     })\r\n                }\r\n            });\r\n        };\r\n    }\r\n    handleCancel = () => {\r\n        console.log('cancel')\r\n        this.props.handleCancel()\r\n        // let { filename } = this.state.fileObj\r\n        // this.props.form.setFieldsValue({\r\n        //     title: '',\r\n        //     description: '',\r\n        //     filename: '',\r\n        //     comments:''\r\n        // },()=>{\r\n            \r\n        // })\r\n       \r\n    }\r\n    // fileNameChange = (e) => {\r\n    //     console.log(e.target, e.target.value)\r\n    //     let val = e.target.value\r\n    //     this.setState({\r\n    //         fileName: val\r\n    //     }, () => {\r\n    //         this.props.changeFileNameP(val)\r\n    //     })\r\n    // }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        let { visible, action } = this.props;\r\n        let { uploading, fileObj } = this.state;\r\n        let { filename, title, description,comments } = fileObj;\r\n        console.log(this.state.fileObj)\r\n        return (<div>\r\n            <Modal\r\n                title=\"Custom Upload\"\r\n                visible={visible}\r\n                onCancel={this.handleCancel}\r\n                footer={null}\r\n                width={800}\r\n            // TODO: Custom upload Modal \r\n            >\r\n                <Form labelCol={{ span: 5 }} wrapperCol={{ span: 12 }} onSubmit={this.handleUpload}>\r\n                    <Form.Item label=\"File Name\">\r\n                        {getFieldDecorator('fileName', {\r\n                            initialValue: filename,\r\n                            // rules: [{ required: true, message: 'Please input your note!' }],\r\n                        })(<Input />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Tilte\">\r\n                        {getFieldDecorator('title', {\r\n                            initialValue: title,\r\n                            rules: [{ required: true, message: 'Please input your title!' }],\r\n                        })(<Input autoComplete=\"off\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Description\">\r\n                        {getFieldDecorator('description', {\r\n                            initialValue: description,\r\n                            rules: [{ required: true, message: 'Please input your description!' }],\r\n                        })(<Input autoComplete=\"off\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Comments\">\r\n                        {getFieldDecorator('comments', {\r\n                            initialValue: comments,\r\n                            rules: [{ required: true, message: 'Please input your comments!' }],\r\n                        })(<Input autoComplete=\"off\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\r\n                        {\r\n                            action ?\r\n                                <Button type=\"primary\" key=\"action\" style={{ marginLeft: '1rem' }} loading={uploading} htmlType=\"submit\">\r\n                                    Save\r\n                          </Button> :\r\n                                <Button type=\"primary\" htmlType=\"submit\" loading={uploading}>\r\n                                    {uploading ? 'Uploading' : 'Start Upload'}\r\n                                </Button>\r\n                        }\r\n                        <Button key=\"back\" style={{ marginLeft: '1rem' }} onClick={this.handleCancel}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n\r\n            </Modal>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Form.create({ name: 'coordinated' })(uploadCustom);","import React, { Component } from 'react';\r\nimport { Form, Button, message, Icon, Upload, Table,Input } from 'antd';\r\nimport UploadCustom from '../../../../components/files/UploadCustom';\r\n// import DocumentList from '../../../../components/DocumentList';\r\n// import axios from 'axios';\r\nconst ButtonGroup = Button.Group;\r\n\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n  state = {\r\n    editing: false,\r\n  };\r\n\r\n  toggleEdit = () => {\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n\r\n  save = e => {\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      console.log({ ...record,...values })\r\n      handleSave({ ...record,values });\r\n    });\r\n  };\r\n\r\n  renderCell = form => {\r\n    this.form = form;\r\n    const { children, dataIndex, record, title } = this.props;\r\n    const { editing } = this.state;\r\n    return editing ? (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `${title} is required.`,\r\n            },\r\n          ],\r\n          initialValue: record[dataIndex],\r\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{ paddingRight: 24 }}\r\n        onClick={this.toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass Documents extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: 'Title',\r\n        dataIndex: 'title',\r\n        key: 'title',\r\n        // onClick={() => this.setRecord(row)}\r\n        render: (text, row) => <span  style={{cursor:'pointer'}} >{text}</span>,\r\n      },\r\n      {\r\n        title: 'Description',\r\n        dataIndex: 'description',\r\n        key: 'description',\r\n      },\r\n      {\r\n        title: 'File Name',\r\n        dataIndex: 'filename',\r\n        key: 'filename',\r\n      },\r\n      {\r\n        title: 'Comments',\r\n        dataIndex: 'comments',\r\n        key: 'comments',\r\n        editable: true,\r\n      }\r\n    ];\r\n    this.state = {\r\n      visible: false,\r\n      fileList: [],\r\n      recordObj: {\r\n        title: ''\r\n      },\r\n      dataSource: [\r\n        {\r\n          key: '1',\r\n          title: 'National Slum Upgrading Program',\r\n          filename: 'Procument',\r\n          description: 'Directorate General of Human Settlements, Ministry Public Works and Housing',\r\n          comments: 'Priview review',\r\n        },\r\n        {\r\n          key: '2',\r\n          title: 'Jim Green',\r\n          filename: 'Plan',\r\n          description: 'London No. 1 Lake Park',\r\n          comments: 'Champion',\r\n        },\r\n        {\r\n          key: '3',\r\n          title: 'Joe Black',\r\n          filename: 'Plan Documents',\r\n          description: 'Sidney No. 1 Lake Park',\r\n          comments: 'Cool teacher',\r\n        },\r\n        {\r\n          key: '4',\r\n          title: 'John Brown',\r\n          filename: 'Procurement',\r\n          description: 'New York No. 1 Lake Park',\r\n          comments: 'Nice developer',\r\n        },\r\n        {\r\n          key: '5',\r\n          title: 'Jim Green',\r\n          filename: 'Test',\r\n          description: 'London No. 1 Lake Park',\r\n          comments: 'Champion',\r\n        },\r\n        {\r\n          key: '6',\r\n          title: 'Joe Black',\r\n          filename: 'Test Documents',\r\n          description: 'Sidney No. 1 Lake Park',\r\n          comments: 'Cool teacher',\r\n        },\r\n      ]\r\n    }\r\n  }\r\n  handleSave = row => {\r\n    // console.log(row)\r\n    const newData = [...this.state.dataSource];\r\n    // console.log(newData)\r\n    const index = newData.findIndex(item => row.key === item.key);\r\n    // console.log(index)\r\n    const item = newData[row.key-1]; //FIXME: Key cannot be less than 1\r\n    // console.log(item)\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      comments:row.values.comments\r\n    });\r\n    // by axios send change data to server\r\n    this.setState({ dataSource: newData });\r\n  };\r\n  handleOk = e => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  }\r\n  showModal = (action, e) => {\r\n    let { recordObj } = this.state\r\n    if (!recordObj.title) {\r\n      message.warning('Please select one line first')\r\n    } else {\r\n      this.setState({\r\n        visible: true,\r\n        action: action\r\n      });\r\n    }\r\n  };\r\n  showUploadModal = () => {\r\n    \r\n      this.setState({\r\n        action:'upload',\r\n        visible: true,\r\n      });\r\n  };\r\n  downLoadFile=()=>{\r\n\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    const { fileList, visible, action, recordObj,dataSource } = this.state;\r\n    const props = {\r\n      onRemove: file => {\r\n        this.setState(state => {\r\n          const index = state.fileList.indexOf(file);\r\n          const newFileList = state.fileList.slice();\r\n          newFileList.splice(index, 1);\r\n          return {\r\n            fileList: newFileList,\r\n          };\r\n        });\r\n      },\r\n      beforeUpload: file => {\r\n        this.setState(state => ({\r\n          fileList: [...state.fileList, file],\r\n        }));\r\n        console.log(file)\r\n        this.showUploadModal()\r\n        return false;\r\n      },\r\n      fileList,\r\n    };\r\n   \r\n    return (<div>\r\n      <Upload {...props}>\r\n        <Button>\r\n          <Icon type=\"upload\" /> Upload Documents\r\n              </Button>\r\n      </Upload>\r\n      <div style={{ marginTop: '0.4rem' }}>\r\n        <div>\r\n          <span style={{ fontSize: '0.9rem', fontWeight: '500', color: '#000', margin: '0.6rem 0', display: 'inline-block' }}>Documents List</span>\r\n          <ButtonGroup style={{ float: 'right' }}>\r\n            <Button type=\"primary\" onClick={this.showModal.bind(this, 'edit')}>\r\n              Edit\r\n          <Icon type=\"edit\" />\r\n            </Button>\r\n            <Button type=\"primary\" onClick={this.showModal.bind(this, 'delete')}>\r\n              Delete\r\n          <Icon type=\"delete\" />\r\n            </Button>\r\n            <Button type=\"primary\" onClick={this.downLoadFile.bind(this, 'download')}>\r\n           {/* //TODO: download File  is need a interface */}\r\n              <a style={{color:'#fff',marginRight:'0.4rem'}} href={`${process.env.PUBLIC_URL}/`} download=\"testdownload.doc\">Download</a>\r\n          <Icon type=\"download\" />\r\n            </Button>\r\n          </ButtonGroup>\r\n        </div>\r\n        <Table size='small'\r\n          components={components}\r\n          bordered={true}\r\n          rowClassName={(record)=>{\r\n            return   record.key === this.state.rowId ? 'clickRowStyl editable-row' : '';\r\n           }}\r\n           onRow={(record, index) => {\r\n               return {\r\n                   onClick: () => {\r\n                       this.setState({\r\n                         rowId: record.key,\r\n                         recordObj:record\r\n                       });\r\n                     },\r\n               };\r\n           }}\r\n          style={{ background: '#fff' }} columns={columns} pagination={{ pageSize: 5 }} dataSource={dataSource} />\r\n      </div>\r\n      <UploadCustom record={recordObj} action={action} fileList={fileList} handleCancel={this.handleCancel} visible={visible} ></UploadCustom>\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default Form.create({ name: 'documents' })(Documents);;","import React, { Component } from 'react';\r\nimport { Tabs, Divider, message } from 'antd';\r\nimport StepperNoContent from '../../../../components/StepperNoContent';\r\nimport ActivityList from '../components/ActivityList';\r\nimport PP from '../components/PP';\r\nimport PDS from '../components/PDS';\r\nimport Documents from '../components/Documents'\r\nconst { TabPane } = Tabs;\r\nclass ProcPlan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lable: 'Submit',\r\n      ppObj: {\r\n        key: '0',\r\n        title: '',\r\n        description: '',\r\n        owner: ''\r\n      },\r\n      action: 'create'\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let { location } = this.props\r\n    console.log(location)\r\n    if (location.state) {\r\n      console.log( { ...location.state.recordObj })\r\n      this.setState({\r\n        ppObj: { ...location.state.recordObj },\r\n        action: location.state.action\r\n      })\r\n    }\r\n    let role = localStorage.getItem('role')\r\n    if (role === 'admin') {\r\n      this.setState({\r\n        lable: 'Approval',\r\n        isDisabled: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        isDisabled: false,\r\n        lable: 'Submit',\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n  //   let {recordObj} = nextProps.location.state\r\n  //   console.log(recordObj.key === prevState.ppObj.key)\r\n  //   if (recordObj && recordObj.key !== prevState.ppObj.key) {\r\n  //     console.log(recordObj.key === prevState.ppObj.key)\r\n  //     return {\r\n  //       ppObj: {...recordObj},\r\n  //     };\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  handleSubmitFile = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    let { ppObj, action } = this.state\r\n    return (<div style={{ backgroundColor: '#fff', padding: '0.4rem 1rem 2.4rem', height: 'auto' }}>\r\n      <div style={{ width: '80%', margin: '12px auto' }}>\r\n        <StepperNoContent></StepperNoContent>\r\n      </div>\r\n      <Divider></Divider>\r\n      <Tabs tabPosition='left' style={{ position: 'relative', width: '100%' }}>\r\n        <TabPane tab=\"PP\" key=\"1\">\r\n          <PP ppObj={ppObj} action={action}></PP>\r\n        </TabPane>\r\n        <TabPane tab=\"PDS\" key=\"2\">\r\n          <PDS action={action}></PDS>\r\n        </TabPane>\r\n        <TabPane tab=\"Activities\" key=\"3\">\r\n          <ActivityList></ActivityList>\r\n        </TabPane>\r\n        <TabPane tab=\"Documents\" key=\"4\">\r\n          <Documents></Documents>\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>);\r\n  }\r\n}\r\nexport default ProcPlan;","import React, { Component } from 'react';\r\nimport { Form, Select, Input, Button } from 'antd';\r\n\r\nconst CustomizedForm = Form.create({\r\n    name: 'global_state',\r\n    onFieldsChange(props, changedFields) {\r\n      props.onChange(changedFields);\r\n    },\r\n    mapPropsToFields(props) {\r\n        console.log(props)\r\n      return {\r\n        username: Form.createFormField({\r\n          ...props.username,\r\n          value: props.username.value,\r\n        }),\r\n        age: Form.createFormField({\r\n            ...props.age,\r\n            value: props.age.value,\r\n          }),\r\n      };\r\n    },\r\n    onValuesChange(_, values) {\r\n      console.log(values);\r\n    },\r\n  })(props => {\r\n    const { getFieldDecorator } = props.form;\r\n    return (\r\n      <Form layout=\"inline\">\r\n        <Form.Item label=\"Username\">\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Username is required!' }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Age\">\r\n          {getFieldDecorator('age', {\r\n            rules: [{ required: true, message: 'Username is required!' }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  });\r\n\r\n\r\nclass Management extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            fields: {\r\n                username: {\r\n                  value: 'benjycui',\r\n                },\r\n                age:{\r\n                    value:18\r\n                }\r\n              },\r\n         }\r\n    }\r\n    handleFormChange = changedFields => {\r\n        this.setState(({ fields }) => ({\r\n          fields: { ...fields, ...changedFields },\r\n        }));\r\n      };\r\n      cancelEdit=()=>{\r\n        this.setState(({ fields }) => ({\r\n            fields: { username: {\r\n                value: 'abs',\r\n              },age:{\r\n                  value:19\r\n              }},\r\n          }));\r\n      }\r\n    \r\n      render() {\r\n        const { fields } = this.state;\r\n        return (\r\n          <div>\r\n            {/* <CustomizedForm {...fields} onChange={this.handleFormChange} />\r\n            <Button type=\"primary\" style={{marginLeft:'1rem'}} onClick={this.cancelEdit}>\r\n                      Cancel\r\n                    </Button> */}\r\n                    Management\r\n          </div>\r\n        );\r\n      }\r\n}\r\nexport default Form.create({ name: 'coordinated' })(Management);\r\n","import React from 'react';\r\nimport { Table, Input, Button, Icon, Tag } from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\nimport DeleteModal from './modals/DeleteModal'\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        name: 'John Brown',\r\n        age: 32,\r\n        address: 'New York No. 1 Lake Park',\r\n        description: 'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.',\r\n        type:'YES',\r\n        method:'NCB',\r\n        value:6\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'Joe Black',\r\n        age: 42,\r\n        address: 'London No. 1 Lake Park',\r\n        description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\r\n        type:'YES',\r\n        method:'NCB',\r\n        value:1\r\n    },\r\n    {\r\n        key: '3',\r\n        name: 'Jim Green',\r\n        age: 32,\r\n        address: 'Sidney No. 1 Lake Park',\r\n        description: 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.',\r\n        type:'YES',\r\n        method:'NCB',\r\n        value:3\r\n    },\r\n    {\r\n        key: '4',\r\n        name: 'Jim Red',\r\n        age: 32,\r\n        address: 'London No. 2 Lake Park',\r\n        description: 'My name is Jim Red, I am 32 years old, living in Sidney No. 1 Lake Park.',\r\n        type:'YES',\r\n        method:'NCB',\r\n        value:4\r\n    },\r\n    {\r\n        key: '5',\r\n        name: 'John Brown',\r\n        age: 12,\r\n        address: 'New York No. 1 Lake Park',\r\n        description: 'My name is John Brown, I am 12 years old, living in New York No. 1 Lake Park.',\r\n        type:'YES',\r\n        method:'NCB',\r\n        value:2\r\n    },\r\n    {\r\n        key: '6',\r\n        name: 'Joe Black',\r\n        age: 32,\r\n        address: 'London No. 1 Lake Park',\r\n        description: 'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.',\r\n        type:'YES',\r\n        method:'NCB',\r\n        value:7\r\n    },\r\n    {\r\n        key: '7',\r\n        name: 'Jim Green',\r\n        age: 43,\r\n        address: 'Sidney No. 1 Lake Park',\r\n        description: 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.',\r\n        type:'YES',\r\n        method:'NCB',\r\n        value:1\r\n    },\r\n    {\r\n        key: '8',\r\n        name: 'Jim Red',\r\n        age: 56,\r\n        address: 'London No. 2 Lake Park',\r\n        description: 'My name is Jim Red, I am 32 years old, living in Sidney No. 1 Lake Park.',\r\n        type:'YES',\r\n        method:'NCB',\r\n        value:5\r\n    },\r\n    {\r\n        key: '9',\r\n        name: 'Green',\r\n        age: 43,\r\n        address: 'Sidney No. 1 Lake Park',\r\n        description: 'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.',\r\n        type:'YES',\r\n        method:'NCB',\r\n        value:3\r\n    },\r\n    {\r\n        key: '10',\r\n        name: 'Jim Red',\r\n        age: 56,\r\n        address: 'London No. 2 Lake Park',\r\n        description: 'My name is Jim Red, I am 32 years old, living in Sidney No. 1 Lake Park.',\r\n        type:'NO',\r\n        method:'NCB',\r\n        value:2\r\n    },\r\n];\r\n\r\nclass TableList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            searchText: '',\r\n            sortedInfo: null,\r\n            loading: false,\r\n            visible: false,\r\n        };\r\n    }\r\n    handleChange = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        this.setState({\r\n            sortedInfo: sorter,\r\n        });\r\n    };\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Button\r\n                    type=\"primary\" icon=\"search\"\r\n                    size=\"small\"\r\n                    onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n\r\n                    style={{ width: 90, marginRight: 8 }}\r\n                >\r\n                    Search\r\n                </Button>\r\n                <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                    Reset\r\n                </Button>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n            <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select());\r\n            }\r\n        }\r\n    });\r\n    deleteRecord = (record) => {\r\n        console.log(record)\r\n    }\r\n    handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n    onChange = (pageNumber) => {\r\n        console.log('Page: ', pageNumber);\r\n    }\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n      };\r\n    \r\n      handleOk = () => {\r\n        this.setState({ loading: true });\r\n        setTimeout(() => {\r\n          this.setState({ loading: false, visible: false });\r\n        }, 3000);\r\n      };\r\n    \r\n      handleCancel = () => {\r\n        this.setState({ visible: false });\r\n      }\r\n    render() {\r\n        let { sortedInfo } = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        const columns = [\r\n            {\r\n                title: 'PackageNo',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n               \r\n                ...this.getColumnSearchProps('name'),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'General Description',\r\n                dataIndex: 'description',\r\n                key: 'description',\r\n                ...this.getColumnSearchProps('description'),\r\n                sorter: (a, b) => a.age - b.age,\r\n                sortOrder: sortedInfo.columnKey === 'description' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Unit',\r\n                dataIndex: 'address',\r\n                key: 'address',\r\n              \r\n                ...this.getColumnSearchProps('address'),\r\n                sorter: (a, b) => a.address.length - b.address.length,\r\n                sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Quantity',\r\n                dataIndex: 'age',\r\n                key: 'age',\r\n               \r\n                ...this.getColumnSearchProps('age'),\r\n                sorter: (a, b) => a.age - b.age,\r\n                sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Review Type',\r\n                dataIndex: 'type',\r\n                key: 'type',\r\n              \r\n                ...this.getColumnSearchProps('type'),\r\n                sorter: (a, b) => a.type.length - b.type.length,\r\n                sortOrder: sortedInfo.columnKey === 'type' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Method',\r\n                dataIndex: 'method',\r\n                key: 'method',\r\n                \r\n                ...this.getColumnSearchProps('method'),\r\n                sorter: (a, b) => a.method.length - b.method.length,\r\n                sortOrder: sortedInfo.columnKey === 'method' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Estimated Value',\r\n                dataIndex: 'value',\r\n                key: 'value',\r\n                \r\n                ...this.getColumnSearchProps('value'),\r\n                sorter: (a, b) => a.value.length - b.value.length,\r\n                sortOrder: sortedInfo.columnKey === 'value' && sortedInfo.order,\r\n            },\r\n            // {\r\n            //     title: 'Action',\r\n            //     dataIndex: '',\r\n            //     key: 'x',\r\n            //     render: (text, record) =>\r\n            //         // <Tag onClick={()=>this.deleteRecord(record)}  color=\"red\">Delete</Tag>\r\n            //         <Button type=\"link\" onClick={this.showModal} size=\"small\" theme=\"filled\" >Detail</Button>\r\n\r\n            // },\r\n        ];\r\n        // onChange:this.onChange  showQuickJumper:true,\r\n        return (\r\n            <div>\r\n                <Table \r\n                 rowClassName={(record)=>{\r\n                    return   record.key === this.state.rowId ? 'clickRowStyl' : '';\r\n                   }}\r\n                   onRow={(record, index) => {\r\n                       return {\r\n                           onClick: () => {\r\n                               this.setState({\r\n                                 rowId: record.key,\r\n                               });\r\n                             },\r\n                       };\r\n                   }}\r\n                scroll={{ x: 1800 }} size='small' bordered pagination={{ pageSize:8 }} columns={columns} \r\n                    expandedRowRender={record => <p style={{ margin: 0 }}>{record.description}</p>}\r\n                    dataSource={data} onChange={this.handleChange} />\r\n                <div>\r\n                    <DeleteModal handleCancel={this.handleCancel} handleOk={this.handleOk} showModal={this.showModal} loading={this.state.loading} visible={this.state.visible}></DeleteModal>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableList","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon, Tag } from 'antd';\r\nimport TableList from '../../../../components/TableList';\r\nimport DeleteModal from '../../../../components/modals/DeleteModal'\r\nclass PlanStatusList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            searchText: '',\r\n            sortedInfo: null,\r\n            loading: false,\r\n            visible: false,\r\n            dataSource:[]\r\n         }\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        this.props.getStatusPlanList()\r\n        .then(res=>{\r\n            if(res){\r\n                this.setState({\r\n                    dataSource:res.data,\r\n                    loading: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n    componentWillUnmount = () => {\r\n        this.setState = (state,callback)=>{\r\n          return;\r\n        };\r\n    }\r\n    handleChange = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        this.setState({\r\n            sortedInfo: sorter,\r\n        });\r\n    };\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Button\r\n                    type=\"primary\" icon=\"search\"\r\n                    size=\"small\"\r\n                    onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n\r\n                    style={{ width: 90, marginRight: 8 }}\r\n                >\r\n                    Search\r\n                </Button>\r\n                <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                    Reset\r\n                </Button>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n            <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select());\r\n            }\r\n        }\r\n    });\r\n    deleteRecord = (record) => {\r\n        console.log(record)\r\n    }\r\n    handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n    onChange = (pageNumber) => {\r\n        console.log('Page: ', pageNumber);\r\n    }\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n      };\r\n    \r\n      handleOk = () => {\r\n        this.setState({ loading: true });\r\n        setTimeout(() => {\r\n          this.setState({ loading: false, visible: false });\r\n        }, 3000);\r\n      };\r\n    \r\n      handleCancel = () => {\r\n        this.setState({ visible: false });\r\n      }\r\n    render() { \r\n        let { sortedInfo ,dataSource,loading} = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        const columns = [\r\n            {\r\n                title: 'PackageNo',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n               \r\n                ...this.getColumnSearchProps('name'),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'General Description',\r\n                dataIndex: 'description',\r\n                key: 'description',\r\n                ...this.getColumnSearchProps('description'),\r\n                sorter: (a, b) => a.age - b.age,\r\n                sortOrder: sortedInfo.columnKey === 'description' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Unit',\r\n                dataIndex: 'address',\r\n                key: 'address',\r\n              \r\n                ...this.getColumnSearchProps('address'),\r\n                sorter: (a, b) => a.address.length - b.address.length,\r\n                sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Quantity',\r\n                dataIndex: 'age',\r\n                key: 'age',\r\n               \r\n                ...this.getColumnSearchProps('age'),\r\n                sorter: (a, b) => a.age - b.age,\r\n                sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Review Type',\r\n                dataIndex: 'type',\r\n                key: 'type',\r\n              \r\n                ...this.getColumnSearchProps('type'),\r\n                sorter: (a, b) => a.type.length - b.type.length,\r\n                sortOrder: sortedInfo.columnKey === 'type' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Method',\r\n                dataIndex: 'method',\r\n                key: 'method',\r\n                \r\n                ...this.getColumnSearchProps('method'),\r\n                sorter: (a, b) => a.method.length - b.method.length,\r\n                sortOrder: sortedInfo.columnKey === 'method' && sortedInfo.order,\r\n            },\r\n            {\r\n                title: 'Estimated Value',\r\n                dataIndex: 'value',\r\n                key: 'value',\r\n                \r\n                ...this.getColumnSearchProps('value'),\r\n                sorter: (a, b) => a.value.length - b.value.length,\r\n                sortOrder: sortedInfo.columnKey === 'value' && sortedInfo.order,\r\n            }\r\n        ];\r\n        return ( <div style={{height:'auto',backgroundColor:'#fff',padding:'10px 16px 50px'}}>\r\n           <h2>PlanStatusList</h2>\r\n           <div>\r\n                <Table \r\n                 rowClassName={(record)=>{\r\n                    return   record.key === this.state.rowId ? 'clickRowStyl' : '';\r\n                   }}\r\n                   onRow={(record, index) => {\r\n                       return {\r\n                           onClick: () => {\r\n                               this.setState({\r\n                                 rowId: record.key,\r\n                               });\r\n                             },\r\n                       };\r\n                   }}\r\n                   loading={loading}\r\n                scroll={{ x: 1800 }} size='small' bordered pagination={{ pageSize:8 }} columns={columns} \r\n                    expandedRowRender={record => <p style={{ margin: 0 }}>{record.description}</p>}\r\n                    dataSource={dataSource} onChange={this.handleChange} />\r\n             \r\n                <div>\r\n                    <DeleteModal handleCancel={this.handleCancel} handleOk={this.handleOk} showModal={this.showModal} loading={this.state.loading} visible={this.state.visible}></DeleteModal>\r\n                </div>\r\n            </div>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default PlanStatusList;","import { connect } from 'react-redux';\r\nimport PlanStatusList from './PlanStatusList';\r\nimport {planActions} from '../../../../actions/planActions'\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getStatusPlanList:()=>dispatch(planActions.getStatusPlanList())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanStatusList);","import React, { Component } from 'react';\r\n// import { Result, Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nclass Nofound extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.isNoFound)\r\n        this.props.hideNav()\r\n    }\r\n    render() {\r\n        console.log(this.props)\r\n        return (<div>\r\n          <div className=\"notfound\">\r\n                <div className=\"notfound-404\">\r\n                    <h1>4<span>0</span>4</h1>\r\n                    \r\n                </div>\r\n                <p> The page you are looking for might have been removed had its name changed or is temporarily unavailable.</p>\r\n                <a href={`${process.env.PUBLIC_URL}/login`}>Login Page</a>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state.user.isNoFound)\r\n    return {\r\n        isNoFound: state.user.isNoFound\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        hideNav: () => dispatch({ type: 'IS_NAV_SHOW', data: true })\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nofound);\r\n","import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport Complaints from './complaints/Complaints'\r\nimport PlanHome from './procumentPlan/PlanHome.Container'\r\nimport { Route, Switch, Link, Redirect, withRouter } from 'react-router-dom';\r\nimport ProcumentPlan from './procumentPlan/pages/PlanDetail';\r\nimport Management from './management/index';\r\nimport PlanStatusList from './procumentPlan/pages/PlanStatusList.Container';\r\nimport Nofound from './Nofound'\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst breadcrumbNameMap = {\r\n  '/home': 'Procurement Plan',\r\n  '/home/review': 'Review Request',\r\n  '/home/approved': 'Approve Request',\r\n  '/home/submited': 'Submited Request',\r\n  '/home/saved': 'Save Request',\r\n  '/home/plan': 'Procurement Plan Detail',\r\n  '/management': 'Contract Management',\r\n  '/complaints': 'Complaints Monitoring',\r\n};\r\nconst Bread = withRouter(props => {\r\n  const { location } = props;\r\n  const pathSnippets = location.pathname.split('/').filter(i => i);\r\n  const extraBreadcrumbItems = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbNameMap[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n  });\r\n  const breadcrumbItems = [\r\n    <Breadcrumb.Item key=\"home\">\r\n    </Breadcrumb.Item>,\r\n  ].concat(extraBreadcrumbItems);\r\n  return (\r\n    <Breadcrumb style={{ margin: '0.3rem 1rem' }}>{breadcrumbItems}</Breadcrumb>\r\n  );\r\n});\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props.location.pathname)\r\n    let key = props.location.pathname\r\n    this.state = {\r\n      selectKey: key.includes('complaints') ? '3' : key.includes('management') ? '2' : '1',\r\n    }\r\n  }\r\n  render() {\r\n    let { selectKey } = this.state\r\n    const {isNoFound} = this.props\r\n    return (<div id=\"components-layout-demo-fixed\">\r\n\r\n      <Layout>\r\n        <Header style={{ display: isNoFound ? 'none' : 'block' }}>\r\n          <span className=\"logo\" style={{ fontSize: '30px', fontWeight: '600', color: '#fff', display: 'inline-block', lineHeight: '48px' }}>Demo</span>\r\n          <Menu\r\n            theme=\"dark\"\r\n            mode=\"horizontal\"\r\n            defaultSelectedKeys={[selectKey]}\r\n          >\r\n            <Menu.Item key=\"1\" ><Link to={`${process.env.PUBLIC_URL}/home`}>Procurement plan</Link></Menu.Item>\r\n            <Menu.Item key=\"2\"><Link to={`${process.env.PUBLIC_URL}/management`}>Contract Management</Link></Menu.Item>\r\n            <Menu.Item key=\"3\"><Link to={`${process.env.PUBLIC_URL}/complaints`}>Complaints Monitoring</Link></Menu.Item>\r\n            <Menu.Item key=\"4\" style={{ float: 'right' }}><Link to={`${process.env.PUBLIC_URL}/login`}>Logout</Link></Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content className=\"h-content\">\r\n          <Bread style={{ display: isNoFound ? 'none' : 'block' }}></Bread>\r\n          <Switch>\r\n            <Route exact path={`${process.env.PUBLIC_URL}/home`} component={PlanHome}></Route>\r\n            <Route path={`${process.env.PUBLIC_URL}/home/review`} component={PlanStatusList}></Route>\r\n            <Route path={`${process.env.PUBLIC_URL}/home/approved`} component={PlanStatusList}></Route>\r\n            <Route path={`${process.env.PUBLIC_URL}/home/saved`} component={PlanStatusList}></Route>\r\n            <Route path={`${process.env.PUBLIC_URL}/home/submited`} component={PlanStatusList}></Route>\r\n            <Route path={`${process.env.PUBLIC_URL}/home/plan`} component={ProcumentPlan}></Route>\r\n            <Route path={`${process.env.PUBLIC_URL}/management`} component={Management}></Route>\r\n            <Route path={`${process.env.PUBLIC_URL}/complaints`} component={Complaints}></Route>\r\n            <Redirect exact path={`${process.env.PUBLIC_URL}/`} to={`${process.env.PUBLIC_URL}/home`} ></Redirect>\r\n            <Route path={`${process.env.PUBLIC_URL}/404`} component={Nofound}></Route>\r\n            <Redirect from='*' to='/404' />\r\n          </Switch>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center', position: 'fixed', bottom: '0', width: '100vw' ,display: isNoFound ? 'none' : 'block' }}>Ant Design Demo ©2019 Created by Xiaohui</Footer>\r\n      </Layout>\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default HomePage;","import { connect } from 'react-redux';\r\nimport HomePage from './index';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isNoFound:state.user.isNoFound\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","import React from 'react';\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport {history } from '../utils/history'\r\nclass NormalLoginForm extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            username:'',\r\n            password:''\r\n        }\r\n    }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // this.props.form.validateFields((err, values) => {\r\n    //   if (!err) {\r\n    //     console.log('Received values of form: ', values);\r\n    //   }\r\n    // });\r\n    let {username} = this.state\r\n    if(username){\r\n        username==='admin' ?  localStorage.setItem('role','admin'):localStorage.setItem('role','user')\r\n        history.push(`${process.env.PUBLIC_URL}/`)\r\n    }\r\n  \r\n  };\r\n  FromChange=(e)=>{\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        this.setState({\r\n           [name]:value\r\n        })\r\n  }\r\n  render() {\r\n      let {username,password} = this.state\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <div className=\"login-logo\">AIIB</div>\r\n        <Form.Item>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Username\"\r\n              setfieldsvalue={username}\r\n              name=\"username\"\r\n              autoComplete=\"off\"\r\n              size=\"large\"\r\n              onChange={this.FromChange}\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Input autosize=\"true\"\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              setfieldsvalue={password}\r\n              name=\"password\"\r\n              size=\"large\"\r\n              onChange={this.FromChange}\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('remember', {\r\n            valuePropName: 'checked',\r\n            initialValue: true,\r\n          })(<Checkbox>Remember me</Checkbox>)}\r\n         \r\n          <Button   size=\"large\" type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Log in\r\n          </Button>\r\n          {/* Or <a href=\"\">register now!</a> */}\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\nexport default WrappedNormalLoginForm","import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport WrappedNormalLoginForm from '../../components/LoginForm'\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { userName: 'hui' };\r\n    }\r\n    componentDidMount(){\r\n        this.props.clearStore()\r\n    }\r\n    render() {\r\n        // style={{ paddingTop: '0px', height: '100vh', backgroundImage: `url(./images/login-back.jpg)`, backgroundPosition: 'center', backgroundRepeat: 'no-repeat', backgroundSize: 'cover' }}\r\n        return (<div style={{ paddingTop: '0px', height: '100vh', backgroundImage: 'url(./images/login-back.jpg)', backgroundPosition: 'center', backgroundRepeat: 'no-repeat', backgroundSize: 'cover' }}>\r\n            <div className=\"login\" >\r\n                <WrappedNormalLoginForm ></WrappedNormalLoginForm>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Login;","import { connect } from 'react-redux';\r\nimport Login from './Login'\r\nconst mapStateToProps = (state) => {\r\n    console.log(state.user)\r\n  return {\r\n\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    clearStore:()=>dispatch({type:'CLEAR_ALL',data:{}})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","export function  setHtmlFontSize(){\r\n    var html = document.documentElement;\r\n    var htmlWidth = html.clientWidth;\r\n    html.style.fontSize = (htmlWidth/1366)*18+'px'\r\n    \r\n}\r\n\r\nexport function resetHtmlFontSize(){\r\n    var html = document.documentElement;\r\n    html.style.fontSize = 'inherit';\r\n}","import React, { Component } from 'react';\nimport { Router, Route, Switch,Redirect } from 'react-router-dom';\n// import Home from './views/home/index';\nimport HomePage from './views/home/index.Container';\nimport { history } from './utils/history';\nimport Login from './views/login/Login.Container';\nimport { setHtmlFontSize, resetHtmlFontSize } from './utils/setHtmlFontSize';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.resize = () => { setHtmlFontSize() };\n  }\n  componentDidMount(){\n    window.addEventListener('resize', this.resize)\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n    resetHtmlFontSize();\n  }\n  render() {\n    setHtmlFontSize()\n    return (<div>\n      ooooooooooooooooooooooooooo\n      <Router history={history}>\n        <Switch>\n         <Route path={`${process.env.PUBLIC_URL}/login`} component={Login}></Route>\n          <Route  path={`${process.env.PUBLIC_URL}/`} component={HomePage}></Route>\n        </Switch>\n      </Router>\n    </div>);\n  }\n}\n\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App'\nconst mapStateToProps = (state) => {\n  return {\n\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const HomeConstants = {\r\n        IS_NAV_SHOW:'IS_NAV_SHOW',\r\n        IS_NAV_HIDE:'IS_NAV_HIDE',\r\n        CLEAR_ALL:'CLEAR_ALL'\r\n}","import { HomeConstants } from '../constants/homeConstants'\r\nconst defaultState = {\r\n    isNoFound: false\r\n}\r\nexport const userReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case HomeConstants.IS_NAV_SHOW:\r\n            return {\r\n                ...state, isNoFound: true\r\n            };\r\n        case HomeConstants.IS_NAV_HIDE:\r\n            return {\r\n                ...state, isNoFound: false\r\n            };\r\n        case HomeConstants.CLEAR_ALL:\r\n            return {\r\n                ...action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport {userReducer} from './UserReducer';\r\nconst rootReducer = combineReducers({\r\n    user: userReducer\r\n})\r\nexport default rootReducer","import  {createStore,applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {createLogger} from 'redux-logger';\r\nimport rootReducer from '../reducers/index';\r\nconst loggleMiddleware = createLogger()\r\nexport const store = createStore(\r\n    rootReducer,applyMiddleware(\r\n        thunkMiddleware,\r\n        loggleMiddleware\r\n    )\r\n)","\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './styles/index.css';\nimport App from './App.Container';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport {store} from './stores/index';\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}