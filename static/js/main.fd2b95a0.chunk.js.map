{"version":3,"sources":["components/CountNumI.js","components/CountNumH.js","components/UseContext.js","components/ReducerDemo.js","components/toRedux/Color.js","components/toRedux/ShowArea.js","components/toRedux/Buttons.js","components/toRedux/SimulationRedux.js","components/asyncRequest/GetData.js","views/HookPage.js","components/drags/Gif.js","views/DragPic.js","components/calculator/Button.js","components/calculator/BtnPanel.js","components/calculator/Display.js","utils/operateC.js","views/Calculator.js","utils/calculatorC.js","utils/isNumberC.js","components/ChildUseMemo.js","views/UseMemoRef.js","components/windowSize/UseWinSize.js","components/windowSize/CallbackChild.js","components/windowSize/UseCallback.js","views/GetWindowSize.js","views/NoFound.js","App.js","index.js"],"names":["CountNumI","props","countNumEvent","count","state","setState","console","log","this","onClick","Component","CountNumH","useState","setCount","useEffect","document","title","className","to","path","exact","component","Index","List","CountContext","createContext","StatusContext","UseContext","status","setStatus","Provider","value","Counter","Consumer","CountChild","useContext","ReducerDemo","useReducer","action","color","dispatch","ColorContext","reducer","type","Color","size","children","ShowArea","style","fontSize","Buttons","SimulationRedux","GetData","data","setData","loading","query","setQuery","url","setUrl","isError","isCancelled","getDataFunc","then","res","catch","err","onChange","event","target","map","val","index","key","name","a","axios","get","aJson","HookPage","Gif","gif","src","alt","SortableGifsContainer","sortableContainer","SortableGif","sortableElement","DragPic","gifs","newGifs","setNewGifs","i","collection","axis","onSortEnd","oldIndex","newIndex","arrayMove","Button","classNames","orange","wide","join","trim","clickHandler","BtnPanel","handleClick","buttonName","Display","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","div","Error","Calculator","obj","total","next","test","result","includes","parseFloat","calculate","ChildUseMemo","actionWeiBo","useMemo","ChangeWeiBo","UseMemoRef","weiBo","setWeiBo","sanPang","setSanPang","text","setText","ipt1","useRef","textRef","current","Date","getTime","ref","e","UseWinSize","width","documentElement","clientWidth","height","clientHeight","SetSize","onResize","useCallback","window","addEventListener","removeEventListener","CallbackChild","callback","num","setNum","set","Set","UseCallback","setVal","add","GetWindowSize","NoFound","App","process","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fd2b95a0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass CountNumI extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { count: 0 }\r\n    }\r\n    countNumEvent = () => {\r\n        let count = this.state.count\r\n        this.setState({\r\n            count: count + 1\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        console.log(`ComponentDidMount=>You clicked ${this.state.count} times`)\r\n    }\r\n    componentDidUpdate() {\r\n        console.log(`componentDidUpdate=>You clicked ${this.state.count} times`)\r\n    }\r\n    render() {\r\n        return (<div>\r\n            <p>You clicked {this.state.count} times</p>\r\n            <button onClick={this.countNumEvent}>Click me</button>\r\n            <div>\r\n                <h6>用class 方式为计数器添加生命周期</h6>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default CountNumI;","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n// let isshow =true\r\nconst CountNumH = () => {\r\n  const [count, setCount] = useState(0);\r\n  //react hooks 必须按顺序调用 即不可以使用if else\r\n  // if(isshow){\r\n  // const [num,setNum] = useState(12);\r\n  // }\r\n  const [num, setNum] = useState(12);\r\n  useEffect(() => {\r\n    console.log(`useEffect, you clicked ${count} times`)\r\n    document.title = `You clicked ${count} times`\r\n    return () => { console.log(`==========================`) }\r\n  }, [count])\r\n  return (<div>\r\n    \r\n    <p>You clicked {count} times</p>\r\n    <button onClick={() => { setCount(count + 1) }}>Hooks Increase</button>\r\n    <button onClick={() => { if (count > 0) { setCount(count - 1) } }}>Hooks Decrease</button>\r\n\r\n    <div className=\"hook-page-use\">\r\n      <h6>Router Page useEffect Part</h6>\r\n      <Router>\r\n        <ul>\r\n          <li><Link to=\"/\">Link</Link></li>\r\n          <li><Link to=\"/list\">List</Link></li>\r\n        </ul>\r\n        <Route path=\"/\" exact component={Index}></Route>\r\n        <Route path=\"/list\" component={List}></Route>\r\n      </Router>\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nexport default CountNumH;\r\n\r\nfunction Index() {\r\n  useEffect(() => {\r\n    console.log(`welcome to index page`);\r\n    return console.log(`leave from index page`);\r\n  }, [12])\r\n  return <h6>this is a index page</h6>\r\n}\r\nfunction List() {\r\n  useEffect(() => {\r\n    console.log(`welcome to list page`);\r\n    function getData() {\r\n      console.log('componentWillUnMount ')\r\n    }\r\n    return () => {\r\n      /**一下两行代码都会在组件被销毁的componentWillUnMount钩子中调用**/\r\n      console.log('取消订阅')\r\n      getData()\r\n    };\r\n    // useEffect 第二个参数为空 即只在componentDidMount生命周期中调用\r\n    //若[]中输入一状态变量 如输入count 变量 则只有count 变化 该useEffect中的函数才会被调用\r\n  }, [])\r\n  return <div>\r\n    <h6>this is a list page</h6>\r\n    <ul>\r\n      <li>1</li>\r\n      <li>2</li>\r\n      <li>3</li>\r\n    </ul>\r\n  </div>\r\n}\r\n","import React, { useState, createContext, useContext } from 'react';\r\n\r\nconst CountContext = createContext();\r\nconst StatusContext = createContext();\r\nconst UseContext = () => {\r\n    const [count, setCount] = useState(0);\r\n    const [status, setStatus] = useState(true);\r\n    return (<div>\r\n        <p>You clicked {count} times</p>\r\n        <button onClick={() => { setCount(count + 1) }}>Hooks Increase</button>\r\n        <button onClick={() => { setStatus(!status) }}>{status ? 'isShow' : 'isHide'}</button>\r\n        <CountContext.Provider value={count}>\r\n            <StatusContext.Provider value={status}>\r\n                <Counter></Counter>\r\n            </StatusContext.Provider>\r\n        </CountContext.Provider>\r\n    </div>);\r\n}\r\n\r\nexport default UseContext;\r\n\r\nfunction Counter() {\r\n    // const count = useContext(CountContext);\r\n    // 第一层子组件  获取传递值得方法一 这个获取多个值时页面会比较乱\r\n    return <div>\r\n        <CountContext.Consumer>\r\n            {count => <i>{count}</i>}\r\n        </CountContext.Consumer>\r\n        <CountChild></CountChild>\r\n        <StatusContext.Consumer>\r\n            {status => <h6>{status ? 'isShow' : 'isHide'}第一层子组件传递多变量</h6>}\r\n        </StatusContext.Consumer>\r\n    </div>\r\n}\r\n\r\nfunction CountChild() {\r\n    //第二层子组件  获取传递值得方法二 这个获取多个值时页面会比较清晰 代码量较少\r\n    const status = useContext(StatusContext)\r\n    const count = useContext(CountContext);\r\n    return <div>\r\n        <h6>{count}深层子组件{status ? 'isShow' : 'isHide'}</h6>\r\n    </div>\r\n}","import React, { useReducer } from 'react';\r\n\r\nconst ReducerDemo = () => {\r\n    const [{ count, color }, dispatch] = useReducer((state, action) => {\r\n        switch (action) {\r\n            case 'add':\r\n                return { ...state, count: state.count + 1 }\r\n            case 'sub':\r\n                return { ...state, count: state.count - 1 }\r\n            case 'change':\r\n                return { ...state, color: 'blue' }\r\n            default:\r\n                return state\r\n        }\r\n    }, { count: 0, color: 'red' })\r\n    return (<div>\r\n        <h6>现在的分数是{count}</h6>\r\n        <h6>现在的颜色是{color}</h6>\r\n        <button onClick={() => dispatch('add')}>Increment</button>\r\n        <button onClick={() => dispatch('sub')}>Decrement</button>\r\n        <button onClick={() => dispatch('change')}>Change color</button>\r\n\r\n    </div>);\r\n}\r\n\r\nexport default ReducerDemo;","import React,{createContext,useReducer} from 'react';\r\nimport { conditionalExpression } from '@babel/types';\r\n\r\nexport const ColorContext = createContext({});\r\nexport const UPDATE_COLOR='UPDATE_COLOR';\r\n\r\nconst reducer=(state,action)=>{\r\n    switch(action.type){\r\n        case UPDATE_COLOR:\r\n            return {...state,color:action.color}\r\n            default:\r\n            return state\r\n    }\r\n}\r\nconst Color = (props) => {\r\n    //props 相当于子组件 \r\n    // console.log(props)\r\n    const [{color,size},dispatch]=useReducer(reducer,{color:'blue',size:17})\r\n    return ( <ColorContext.Provider value={{color,size,dispatch}}>\r\n    {props.children}\r\n    </ColorContext.Provider> );\r\n}\r\n \r\nexport default Color;","import React,{useContext } from 'react';\r\nimport {ColorContext} from './Color';\r\n\r\nconst ShowArea = () => {\r\n    const {color,size} = useContext(ColorContext);\r\n    return ( <div style={{color:color,fontSize:'20px'}}>字体颜色为{color}+{size}</div> );\r\n}\r\n \r\nexport default ShowArea;","import React,{useContext} from 'react';\r\nimport { ColorContext, UPDATE_COLOR } from './Color';\r\nconst Buttons = () => {\r\n    const {dispatch}= useContext(ColorContext)\r\n    return ( <div>\r\n\r\n        <button onClick={()=>dispatch({type:UPDATE_COLOR,color:'red'})}>红色</button>\r\n        <button onClick={()=>dispatch({type:UPDATE_COLOR,color:'purple'})}>紫色</button>\r\n    </div> );\r\n}\r\n \r\nexport default Buttons;","import React, { useReducer } from 'react';\r\nimport ShowArea from './ShowArea';\r\nimport Buttons from './Buttons';\r\nimport Color from './Color'\r\nconst SimulationRedux = () => {\r\n    return (<div>\r\n        <Color>\r\n            <ShowArea />\r\n            <Buttons />\r\n        </Color>\r\n    </div>);\r\n}\r\n\r\nexport default SimulationRedux;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { validate } from '@babel/types';\r\n\r\nconst GetData = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoad] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    const [url, setUrl] = useState('https://www.easy-mock.com/mock/5d00b80272591921753cdf78/reactDemo01/planStatusList')\r\n    const [isError, setIsError] = useState(false)\r\n   \r\n    useEffect(() => {\r\n        let isCancelled = false;\r\n\r\n        //方法一\r\n        // axios.get(url)\r\n        // .then(res=>{\r\n        //     if(!isCancelled){\r\n        //         setData(res.data)\r\n        //         console.log(res)\r\n        //     }\r\n        // })\r\n        // .catch(err=>{\r\n        //     console.log(err)\r\n        // })\r\n        //方法二\r\n        getDataFunc(url)\r\n        .then(res=>{\r\n                 if(!isCancelled){\r\n                setData(res.data)\r\n                console.log(res)\r\n            }\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n        // async function getData() {\r\n        //     //给获取数据时页面设置loading\r\n        //     setIsError(false)\r\n        //     setLoad(true)\r\n        //     // //错误处理机制\r\n        //     try {\r\n        //         if (!isCancelled) {\r\n        //             const result =[{\r\n        //                 \"key\": \"2\",\r\n        //                 \"name\": \"Joe Black\",\r\n        //                 \"age\": 42,\r\n        //                 \"address\": \"London No. 1 Lake Park\",\r\n        //                 \"description\": \"My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.\",\r\n        //                 \"type\": \"YES\",\r\n        //                 \"method\": \"NCB\",\r\n        //                 \"value\": 1\r\n        //               }]\r\n        //             //  await axios.get(url);\r\n        //             setData(result)\r\n        //         }\r\n\r\n        //     } catch (error) {\r\n        //         setIsError(true)\r\n        //     }\r\n\r\n        //     setLoad(false)\r\n        // }\r\n        // // To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function\r\n        // if (!isCancelled) {\r\n        //     getData()\r\n        // }\r\n        return () => { isCancelled = true }\r\n    }, [url])\r\n    function changeIpt(event) {\r\n        setQuery(event.target.value)\r\n    }\r\n    return (<div>\r\n        <input type=\"text\" value={query} onChange={changeIpt}></input>\r\n        {/* planStatusList */}\r\n        <button type=\"button\" onClick={() => { query == 'a' ? setUrl('https://www.easy-mock.com/mock/5d00b80272591921753cdf78/reactDemo01/getData') : setUrl('https://www.easy-mock.com/mock/5d00b80272591921753cdf78/reactDemo01/') }}>转换</button>\r\n        {isError && <div>捕捉到错误</div>}\r\n        {\r\n            loading ? <div>loading...</div>\r\n                : <div className=\"get-data\">\r\n                    <ul>\r\n                        {\r\n                            data.map((val, index) => {\r\n                                return <li key={index}>{val.name}</li>\r\n\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n        }\r\n\r\n    </div>);\r\n}\r\n\r\nexport default GetData;\r\n\r\nasync function getDataFunc(url){\r\n    let aJson =await  axios.get(url)\r\n    return aJson\r\n}\r\n\r\n\r\n","import React,{useEffect} from 'react';\r\nimport CountNumI from '../components/CountNumI';\r\nimport CountNumH from '../components/CountNumH';\r\nimport UseContext from '../components/UseContext';\r\nimport ReducerDemo from '../components/ReducerDemo';\r\nimport SimulationRedux from '../components/toRedux/SimulationRedux';\r\nimport GetData from '../components/asyncRequest/GetData';\r\nimport '../css/hookPage.css';\r\nimport { Link } from \"react-router-dom\";\r\nconst HookPage = () => {\r\n    \r\n    return (<div className=\"hook-page\">\r\n        <div>\r\n            <h5>1、类实现</h5>\r\n            <CountNumI></CountNumI>\r\n        </div>\r\n        <div>\r\n            <h5>2、react-hooks实现(useState)</h5>\r\n            <CountNumH></CountNumH>\r\n        </div>\r\n        <div>\r\n            <h5>3、Context实现</h5>\r\n            <UseContext></UseContext>\r\n        </div>\r\n        <div>\r\n            <h5>4、useReducer实现</h5>\r\n            <ReducerDemo></ReducerDemo>\r\n        </div>\r\n        <div>\r\n            <h5>5、useReducer 和 useContext实现redux</h5>\r\n            <SimulationRedux></SimulationRedux>\r\n        </div>\r\n\r\n        <div>\r\n            <h5>6、发起异步请求</h5>\r\n            <GetData></GetData>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default HookPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst Gif = ({ gif }) => (<img src={gif} alt=\"gif\"></img>)\r\n\r\n\r\nGif.propTypes = {\r\n    gif: PropTypes.string.isRequired\r\n}\r\nexport default Gif;","// 原文链接 https://juejin.im/post/5d5a3a015188255d827cde4b?utm_source=gold_browser_extension#heading-0\r\n\r\nimport React, { useState } from 'react';\r\nimport Gif from '../components/drags/Gif';\r\n\r\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move';\r\n// sortableContainer 是所有可排序元素的容器；\r\nconst SortableGifsContainer = sortableContainer(({ children }) => <div className=\"gifs\">{children}</div>)\r\n// sortableElement 是每个可渲染元素的容器\r\nconst SortableGif = sortableElement(({ gif }) => <Gif key={gif} gif={gif}></Gif>)\r\n\r\nconst DragPic = () => {\r\n    const [gifs, useGifs] = useState(['https://media.giphy.com/media/3ohhwoWSCtJzznXbuo/giphy.gif', 'https://media.giphy.com/media/l46CbZ7KWEhN1oci4/giphy.gif', 'https://media.giphy.com/media/3ohzgD1wRxpvpkDCSI/giphy.gif', 'https://media.giphy.com/media/xT1XGYy9NPhWRPp4pq/giphy.gif',])\r\n    const [newGifs, setNewGifs] = useState([\r\n        'https://media.giphy.com/media/xiOgHgY2ceKhm46cAj/giphy.gif',\r\n        'https://media.giphy.com/media/3oKIPuMqYfRsyJTWfu/giphy.gif',\r\n        'https://media.giphy.com/media/4ZgLPakqTajjVFOVqw/giphy.gif',\r\n        'https://media.giphy.com/media/3o7btXIelzs8nBnznG/giphy.gif',\r\n    ]);\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex, collection }) => {\r\n        switch (collection) {\r\n            case 'gifs':\r\n                setNewGifs(arrayMove(gifs, oldIndex, newIndex))\r\n                break;\r\n            case 'newGifs':\r\n                setNewGifs(arrayMove(newGifs, oldIndex, newIndex))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (<div className=\"box\">\r\n        <h5>Drag those GIFs around</h5>\r\n        <h5>Set 1</h5>\r\n        {gifs.map((gif, i) => <Gif collection=\"gifs\" key={gif} gif={gif}></Gif>)}\r\n\r\n        <h5>Set 2  You can sort these pictures. </h5>\r\n        <SortableGifsContainer axis=\"x\" onSortEnd={onSortEnd}>\r\n            {newGifs.map((gif, i) => (\r\n                <SortableGif\r\n                    index={i}\r\n                    key={gif}\r\n                    gif={gif}\r\n                    collection=\"newGifs\"\r\n\r\n                />\r\n            ))}\r\n\r\n        </SortableGifsContainer>\r\n    </div>);\r\n}\r\n\r\nexport default DragPic;","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Button = (props) => {\r\n    \r\n    const handleClick = () => {\r\n        props.clickHandler(props.name)\r\n    }\r\n    const classNames = [\"component-button \", props.orange ? \"orange \" : \"\", props.wide ? \"wide\" : \"\"]\r\n    return (<div className={classNames.join('').trim()}>\r\n        <button className=\"calculator-menu\" onClick={handleClick}>{props.name}</button>\r\n    </div>);\r\n}\r\nButton.propTypes = {\r\n    name: propTypes.string,\r\n    orange: propTypes.bool,\r\n    wide: propTypes.bool,\r\n    clickHandler: propTypes.func\r\n}\r\nexport default Button;","import React from 'react';\r\nimport Button from './Button'\r\nconst BtnPanel = ({ handleClick }) => {\r\n    const clickHandler = buttonName => {\r\n        // console.log(buttonName)\r\n        handleClick(buttonName)\r\n    }\r\n    return (<div className=\"component-button-panel\">\r\n        <div>\r\n            <Button name=\"AC\" clickHandler={clickHandler}></Button>\r\n            <Button name=\"+/-\" clickHandler={clickHandler}></Button>\r\n            <Button name=\"%\" clickHandler={clickHandler}></Button>\r\n            <Button name=\"÷\" clickHandler={clickHandler} orange></Button>\r\n        </div>\r\n        <div>\r\n          <Button name=\"7\" clickHandler={clickHandler} />\r\n          <Button name=\"8\" clickHandler={clickHandler} />\r\n          <Button name=\"9\" clickHandler={clickHandler} />\r\n          <Button name=\"x\" clickHandler={clickHandler} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"4\" clickHandler={clickHandler} />\r\n          <Button name=\"5\" clickHandler={clickHandler} />\r\n          <Button name=\"6\" clickHandler={clickHandler} />\r\n          <Button name=\"-\" clickHandler={clickHandler} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"1\" clickHandler={clickHandler} />\r\n          <Button name=\"2\" clickHandler={clickHandler} />\r\n          <Button name=\"3\" clickHandler={clickHandler} />\r\n          <Button name=\"+\" clickHandler={clickHandler} orange />\r\n        </div>\r\n        <div>\r\n          <Button name=\"0\" clickHandler={clickHandler} wide />\r\n          <Button name=\".\" clickHandler={clickHandler} />\r\n          <Button name=\"=\" clickHandler={clickHandler} orange />\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default BtnPanel;","import React from 'react';\r\nimport propTypes from 'prop-types'\r\nconst Display = ({value}) => {\r\n    return ( <div className=\"component-display\">\r\n      {value}\r\n    </div> );\r\n}\r\nDisplay.propTypes={\r\n    value:propTypes.string\r\n}\r\nexport default Display;","import Big from 'big.js';\r\nexport default function operate(numberOne,numberTwo,operation){\r\n    const one = Big(numberOne||'0');\r\n    const two = Big(numberTwo||(operation ==='÷'||operation ==='x'?\"1\":\"0\"))\r\nif(operation ===\"+\"){\r\n    return one.plus(two).toString();\r\n}\r\nif(operation ==='-'){\r\n    return one.minus(two).toString();\r\n}\r\nif(operation ==='x'){\r\n    return one.times(two).toString();\r\n}\r\nif(operation==='÷'){\r\n    if(two ===\"0\"){\r\n        alert(\"Divide by 0 error\");\r\n        return 0;\r\n    }else{\r\n        return one.div(two).toString();\r\n    }\r\n}\r\nthrow Error(`Unknown operation '${operation}'`);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","// 原文链接  https://github.com/ahfarmer/calculator\r\n\r\nimport React, { Component } from 'react';\r\nimport '../css/calculator.css';\r\nimport BtnPanel from '../components/calculator/BtnPanel';\r\nimport Display from '../components/calculator/Display';\r\nimport calculate from '../utils/calculatorC';\r\nclass Calculator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            next: null,\r\n            total: null,\r\n            operation: null\r\n        }\r\n    }\r\n    handleClick = buttonName => {\r\n        console.log(buttonName)\r\n        this.setState(calculate(this.state, buttonName));\r\n    }\r\n    render() {\r\n        const { next, total } = this.state\r\n        return (<div className=\"calculator\">\r\n            <Display value={next || total || '0'}></Display>\r\n            <BtnPanel handleClick={this.handleClick}></BtnPanel>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Calculator;\r\n// const Calculator = () => {\r\n//     const handleClick = buttonName => {\r\n//         // console.log(buttonName)\r\n//     }\r\n//     return (<div className=\"calculator\">\r\n//         <Display></Display>\r\n//         <BtnPanel handleClick={handleClick}></BtnPanel>\r\n//     </div>);\r\n// }\r\n\r\n// export default Calculator;","import Big from \"big.js\";\r\nimport operate from \"./operateC\";\r\nimport isNumber from './isNumberC';\r\n\r\n/**\r\n * Given a button name and a calculator data object, return an updated\r\n * calculator data object.\r\n *\r\n * Calculator data object contains:\r\n *   total:String      the running total\r\n *   next:String       the next number to be operated on with the total\r\n *   operation:String  +, -, etc.\r\n */\r\nexport default function calculate(obj, buttonName) {\r\n    if (buttonName === \"AC\") {\r\n        return {\r\n            total: null,\r\n            next: null,\r\n            operation: null\r\n        }\r\n    }\r\n    if (isNumber(buttonName)) {\r\n        if (buttonName === \"0\" && obj.next === \"0\") {\r\n            return {};\r\n        }\r\n        if (obj.operation) {\r\n            if (obj.next) {\r\n                return { next: obj.next + buttonName };\r\n            }\r\n            return { next: buttonName };\r\n        }\r\n        if (obj.next) {\r\n            const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\r\n            return {\r\n                next,\r\n                total: null,\r\n            }\r\n        }\r\n        return {\r\n            next: buttonName,\r\n            total: null,\r\n        };\r\n    }\r\n    if (buttonName === \"%\") {\r\n        if (obj.operation && obj.next) {\r\n            const result = operate(obj.total, obj.next, obj.operation);\r\n            return {\r\n                total: Big(result)\r\n                    .div(Big(\"100\"))\r\n                    .toString(),\r\n                next: null,\r\n                operation: null,\r\n            };\r\n        }\r\n        if (obj.next) {\r\n            return {\r\n                next: Big(obj.next)\r\n                .div(Big(\"100\"))\r\n                .toString(),\r\n            }\r\n        }\r\n        return {};\r\n    }\r\n    if(buttonName==='.'){\r\n        if(obj.next){\r\n            if(obj.next.includes(\".\")){\r\n                return{};\r\n            }\r\n            return {next:obj.next+\".\"};\r\n        }\r\n        return {next:\"0.\"}\r\n    }\r\n    if(buttonName===\"=\"){\r\n        if(obj.next&&obj.operation){\r\n            return{\r\n                total:operate(obj.total,obj.next,obj.operation),\r\n                next:null,\r\n                operation:null,\r\n            }\r\n        }else{\r\n            return{};\r\n        }\r\n    }\r\n    if(buttonName===\"+/-\"){\r\n        if(obj.next){\r\n            return {next:(-1*parseFloat(obj.next)).toString()};\r\n        }\r\n        if(obj.total){\r\n            return{total:(-1*parseFloat(obj.total)).toString()};\r\n        }\r\n        return {}\r\n    }\r\n     // Button must be an operation\r\n\r\n  // When the user presses an operation button without having entered\r\n  // a number first, do nothing.\r\n  // if (!obj.next && !obj.total) {\r\n  //   return {};\r\n  // }\r\n  // User pressed an operation button and there is an existing operation\r\n  if (obj.operation) {\r\n      return {\r\n          total:operate(obj.total,obj.next,obj.operation),\r\n          next:null,\r\n          operation:buttonName,\r\n      };\r\n  }\r\n   // no operation yet, but the user typed one\r\n\r\n  // The user hasn't typed a number yet, just save the operation\r\n  if(!obj.next){\r\n      return{operation:buttonName};\r\n  }\r\n  // save the operation and shift 'next' into 'total'\r\n  return {\r\n      total:obj.next,\r\n      next:null,\r\n      operation:buttonName,\r\n  };\r\n\r\n}","export default function isNumber(item){\r\n    return /[0-9]+/.test(item)\r\n}","import React,{useMemo} from 'react';\r\nconst ChildUseMemo = ({ name, children }) => {\r\n    function ChangeWeiBo(name) {\r\n        console.log(name+4)\r\n        console.log(name, children, \"7\")\r\n        return name + \" is a little dog\"\r\n    }\r\n    \r\n    // 每次点击按钮都会触发事件执行 \r\n    // const actionWeiBo = ChangeWeiBo(name)\r\n    // 只有当name 值变化 即点击Wei Bo 按钮才会触发\r\n     const actionWeiBo = useMemo(()=>ChangeWeiBo(name),[name])\r\n    return (<>\r\n        <div>{actionWeiBo}</div>\r\n        <div>{children}</div>\r\n    </>);\r\n}\r\n\r\nexport default ChildUseMemo;","import React, { useState, useRef,useEffect } from 'react';\r\nimport ChildUseMemo from '../components/ChildUseMemo';\r\nimport '../css/useMemoRef.css';\r\nconst UseMemoRef = () => {\r\n    const [weiBo, setWeiBo] = useState(\"Wei Bo\");\r\n    const [sanPang, setSanPang] = useState(\"San Pang\");\r\n    const [text,setText] = useState(\"Peter hui\")\r\n    const ipt1 = useRef(null);\r\n    const textRef = useRef()\r\n    // 以为会把Ni Hao 字段存进来结果并没有\r\n    // const ipt2 = useRef('Ni Hao')\r\n    const  btnClick =()=>{\r\n        // console.log(ipt1,'**********',ipt2)\r\n        ipt1.current.value='hello WeiBo'\r\n    }\r\n    useEffect(()=>{\r\n        textRef.current = text;\r\n        console.log('textRef.current+ '+textRef.current)\r\n    })\r\n    return (<div className=\"use-memo-ref\">\r\n        <div>\r\n            <h5>UseMemo</h5>\r\n            <button onClick={() => setWeiBo(new Date().getTime() + ' Wei Bo')}>Wei Bo</button>\r\n            <button onClick={() => setSanPang(new Date().getTime() + ' San Pang is so cute')}>San Pang</button>\r\n            <ChildUseMemo name={weiBo}>{sanPang}</ChildUseMemo>\r\n        </div>\r\n        <div>\r\n            <h5>UseRef</h5>\r\n           {/* <div ref={ipt2}>dd</div> */}\r\n            <input ref={ipt1} type=\"text\"></input>\r\n            <button onClick={btnClick}>在Input输入框 上展示文字</button>\r\n        </div>\r\n        <div>\r\n            <h5>useRef 保存普通变量</h5>\r\n            <input value={text} onChange={(e)=>{setText(e.target.value)}}></input>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\n\r\n\r\nexport default UseMemoRef;","import React, { useState,useCallback,useEffect } from 'react';\r\nconst UseWinSize = () => {\r\n    const [size, SetSize] = useState({\r\n        width: document.documentElement.clientWidth,\r\n        height: document.documentElement.clientHeight\r\n    })\r\n    const onResize = useCallback(() => {\r\n        SetSize({\r\n            width: document.documentElement.clientWidth,\r\n            height: document.documentElement.clientHeight\r\n        })\r\n    }, [])\r\n    useEffect(()=>{\r\n        window.addEventListener('resize',onResize)\r\n\r\n        return ()=>{\r\n            window.removeEventListener('resize',onResize)\r\n        }\r\n    },[])\r\n    return size;\r\n}\r\n\r\nexport default UseWinSize;","import React,{useState,useEffect} from 'react';\r\nconst CallbackChild = ({callback}) => {\r\n    const [num,setNum] = useState(()=>callback())\r\n    useEffect(()=>{\r\n        setNum(callback())\r\n    },[callback])\r\n    return ( <div>\r\n        {num}\r\n    </div> );\r\n}\r\n \r\nexport default CallbackChild;","import React,{useCallback,useState} from 'react';\r\n import CallbackChild from './CallbackChild';\r\nconst set = new Set();\r\nconst UseCallback = () => {\r\n    const [num,setNum] = useState(1);\r\n    const [val,setVal] = useState('');\r\n    const callback =useCallback(()=>{\r\n        // 我们可以看到，每次修改count，set.size就会+1，这说明useCallback依赖变量count，\r\n        // count变更时会返回新的函数；而val变更时，set.size不会变，说明返回的是缓存的旧版本函数\r\n        console.log(num)\r\n        return num;\r\n    },[num])\r\n    set.add(callback)\r\n    return ( <div>\r\n        <h6>num {num}</h6>\r\n        <h4>set.size{set.size}</h4>\r\n        <div>\r\n            <button onClick={()=>setNum(num+1)}>+</button>\r\n            <input value={val} onChange={event=>setVal(event.target.value)}>\r\n            </input>\r\n        </div>\r\n        <div>\r\n            <h6>\r\n            useCallback 在父子组件中的应用 \r\n            </h6>\r\n            <CallbackChild callback={callback}></CallbackChild>\r\n        </div>\r\n    </div> );\r\n}\r\n \r\nexport default UseCallback;","import React from 'react';\r\n// 该函数为自定义hooks函数\r\nimport UseWinSize from '../components/windowSize/UseWinSize';\r\n\r\nimport UseCallback from '../components/windowSize/UseCallback';\r\nimport '../css/resizeWin.css';\r\nconst GetWindowSize = () => {\r\n    const size = UseWinSize();\r\n    return ( <div className=\"resize-window\">\r\n       <div>\r\n           <h5> 页面size:{size.width}x{size.height}</h5>\r\n       </div>\r\n       <div>\r\n           <h5>\r\n               UseCallback 用于父子组件中\r\n               </h5>\r\n               <UseCallback></UseCallback>\r\n        \r\n       </div>\r\n    </div> );\r\n}\r\n \r\nexport default GetWindowSize;","import React from 'react';\r\nconst NoFound = () => {\r\n    return ( <div style={{fontSize:'30px'}}>404</div> );\r\n}\r\n \r\nexport default NoFound;","import React,{Component} from 'react';\nimport { HashRouter as Router, Route, Link, Redirect, Switch } from \"react-router-dom\";\nimport './App.css';\nimport HookPage from './views/HookPage';\nimport DragPic from './views/DragPic';\nimport Calculator from './views/Calculator';\nimport UseMemoRef from './views/UseMemoRef';\nimport GetWindowSize from './views/GetWindowSize';\n// import { history } from './utils/history';\nimport NoFound from './views/NoFound';\n// function App(props) {\n// const [active,setActive] = useState(true)\n// console.log(props)\n//   return (\n    \n//     <div className=\"App\">\n//       <Router>\n//         <div className=\"link\">\n//           <Link className=\"active\" to={`${process.env.PUBLIC_URL}/hook`}>Hooks</Link>\n//           <Link to={`${process.env.PUBLIC_URL}/drag`}>Dragging</Link>\n//           <Link to={`${process.env.PUBLIC_URL}/calculator`}>Calculator</Link>\n//           <Link to={`${process.env.PUBLIC_URL}/useMemo`}>UseMemo/Ref</Link>\n//           <Link to={`${process.env.PUBLIC_URL}/sizeWin`}>Resize Window</Link>\n//           <div>\n//           </div>\n//           <Switch>\n//             <Route path='/hook' exact component={HookPage}></Route>\n//             <Route path='/drag' exact component={DragPic}></Route>\n//             <Route path='/calculator' exact component={Calculator}></Route>\n//             <Route path='/useMemo' exact component={UseMemoRef}></Route>\n//             <Route path='/sizeWin' exact component={GetWindowSize}></Route>\n//             <Redirect path='/' exact to='/hook'></Redirect>\n//             <Route path='/404' component={NoFound}></Route>\n//             <Redirect path='*' to='/404'></Redirect>\n//           </Switch>\n//         </div>\n//       </Router>\n\n//     </div>\n//   );\n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  }\n  }\n  render() { \n    console.log(this.props)\n    return ( <div className=\"App\">\n    <Router>\n      <div className=\"link\">\n        <Link className=\"active\" to={`${process.env.PUBLIC_URL}/hook`}>Hooks</Link>\n        <Link to={`${process.env.PUBLIC_URL}/drag`}>Dragging</Link>\n        <Link to={`${process.env.PUBLIC_URL}/calculator`}>Calculator</Link>\n        <Link to={`${process.env.PUBLIC_URL}/useMemo`}>UseMemo/Ref</Link>\n        <Link to='/sizeWin'>Resize Window</Link>\n        <div>\n        </div>\n        <Switch>\n          <Route path='/hook' exact component={HookPage}></Route>\n          <Route path='/drag' exact component={DragPic}></Route>\n          <Route path='/calculator' exact component={Calculator}></Route>\n          <Route path='/useMemo' exact component={UseMemoRef}></Route>\n          <Route path='/sizeWin' exact component={GetWindowSize}></Route>\n          <Redirect path='/' exact to='/hook'></Redirect>\n          <Route path='/404' component={NoFound}></Route>\n          <Redirect path='*' to='/404'></Redirect>\n        </Switch>\n      </div>\n    </Router>\n\n  </div>  );\n  }\n}\n \n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import {HashRouter} from 'react-router-dom'\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}